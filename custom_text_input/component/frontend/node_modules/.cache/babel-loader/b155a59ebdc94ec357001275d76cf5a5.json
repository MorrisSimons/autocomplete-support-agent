{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _taggedTemplateLiteral = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nvar _templateObject, _templateObject2, _templateObject3;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Evals = void 0;\nconst tslib_1 = require(\"../../internal/tslib.js\");\nconst resource_1 = require(\"../../core/resource.js\");\nconst RunsAPI = tslib_1.__importStar(require(\"./runs/runs.js\"));\nconst runs_1 = require(\"./runs/runs.js\");\nconst pagination_1 = require(\"../../core/pagination.js\");\nconst path_1 = require(\"../../internal/utils/path.js\");\nclass Evals extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n  }\n  /**\n   * Create the structure of an evaluation that can be used to test a model's\n   * performance. An evaluation is a set of testing criteria and the config for a\n   * data source, which dictates the schema of the data used in the evaluation. After\n   * creating an evaluation, you can run it on different models and model parameters.\n   * We support several types of graders and datasources. For more information, see\n   * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n   */\n  create(body, options) {\n    return this._client.post('/evals', _objectSpread({\n      body\n    }, options));\n  }\n  /**\n   * Get an evaluation by ID.\n   */\n  retrieve(evalID, options) {\n    return this._client.get((0, path_1.path)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"/evals/\", \"\"])), evalID), options);\n  }\n  /**\n   * Update certain properties of an evaluation.\n   */\n  update(evalID, body, options) {\n    return this._client.post((0, path_1.path)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"/evals/\", \"\"])), evalID), _objectSpread({\n      body\n    }, options));\n  }\n  /**\n   * List evaluations for a project.\n   */\n  list() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    return this._client.getAPIList('/evals', pagination_1.CursorPage, _objectSpread({\n      query\n    }, options));\n  }\n  /**\n   * Delete an evaluation.\n   */\n  delete(evalID, options) {\n    return this._client.delete((0, path_1.path)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"/evals/\", \"\"])), evalID), options);\n  }\n}\nexports.Evals = Evals;\nEvals.Runs = runs_1.Runs;","map":{"version":3,"mappings":";;AAAA;AAAA;AAAA;AAAA;;;;;;AAEA;AAIA;AACA;AAkBA;AAEA;AAEA,MAAaA,KAAM,SAAQC,sBAAW;EAAtCC;;IACE,SAAI,GAAiB,IAAIC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC;EA4CrD;EA1CE;;;;;;;;EAQAC,MAAM,CAACC,IAAsB,EAAEC,OAAwB;IACrD,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,QAAQ;MAAIF;IAAI,GAAKC,OAAO,EAAG;EAC1D;EAEA;;;EAGAE,QAAQ,CAACC,MAAc,EAAEH,OAAwB;IAC/C,OAAO,IAAI,CAACH,OAAO,CAACO,GAAG,EAAC,cAAI,kFAAUD,MAAM,GAAIH,OAAO,CAAC;EAC1D;EAEA;;;EAGAK,MAAM,CAACF,MAAc,EAAEJ,IAAsB,EAAEC,OAAwB;IACrE,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,EAAC,cAAI,oFAAUE,MAAM;MAAMJ;IAAI,GAAKC,OAAO,EAAG;EACxE;EAEA;;;EAGAM,IAAI,GAEsB;IAAA,IADxBC,4EAA2C,EAAE;IAAA,IAC7CP,OAAwB;IAExB,OAAO,IAAI,CAACH,OAAO,CAACW,UAAU,CAAC,QAAQ,EAAEC,uBAA4B;MAAIF;IAAK,GAAKP,OAAO,EAAG;EAC/F;EAEA;;;EAGAU,MAAM,CAACP,MAAc,EAAEH,OAAwB;IAC7C,OAAO,IAAI,CAACH,OAAO,CAACa,MAAM,EAAC,cAAI,oFAAUP,MAAM,GAAIH,OAAO,CAAC;EAC7D;;AA5CFW;AAg2BAnB,KAAK,CAACI,IAAI,GAAGgB,WAAI","names":["Evals","resource_1","constructor","RunsAPI","Runs","_client","create","body","options","post","retrieve","evalID","get","update","list","query","getAPIList","pagination_1","delete","exports","runs_1"],"sourceRoot":"","sources":["../../src/resources/evals/evals.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}