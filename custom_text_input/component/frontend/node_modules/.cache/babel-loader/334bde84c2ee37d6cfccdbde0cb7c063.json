{"ast":null,"code":"import{StreamlitComponentBase,withStreamlitConnection,Streamlit}from\"streamlit-component-lib\";import React from\"react\";class Copilot extends StreamlitComponentBase{constructor(){super(...arguments);this.userTextarea=null;this.suggestionTextarea=null;this.state={\"text\":\"\",\"suggestion\":\"\",\"isFocused\":false,'textAreaIsFocused':false,requestsThisMinute:0,currentMinute:Math.floor(Date.now()/60000),totalRequests:0,successfulRequests:0,failedRequests:0,inputCost:0,outputCost:0,totalCost:0};this.render=()=>{const{theme}=this.props;if(!theme){return/*#__PURE__*/React.createElement(\"div\",null,\"Theme is undefined, please check streamlit version.\");}const height_int=this.props.args[\"height\"];const font_fam=theme.font;const f_height=height_int+'px';const f_focused='1px solid '+theme.primaryColor;const f_not_focused='1px solid '+theme.secondaryBackgroundColor;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:'1em',color:theme.textColor,marginBottom:'0.5em',padding:'0.5em',backgroundColor:theme.backgroundColor,borderRadius:'0.3em',border:'1px solid '+theme.secondaryBackgroundColor,display:'flex',justifyContent:'space-between',alignItems:'center'}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"API Stats:\"),\" Total: \",this.state.totalRequests,\" | \\u2705 Success: \",this.state.successfulRequests,\" | \\u274C Failed: \",this.state.failedRequests,\" |\",\"Requests this per minute / limit: \",this.state.requestsThisMinute,\" / \",this.props.args[\"rpm_limit\"],/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,\"Cost:\"),\" Input: $\",this.state.inputCost.toFixed(6),\" | Output: $\",this.state.outputCost.toFixed(6),\" | Total: $\",this.state.totalCost.toFixed(6)),/*#__PURE__*/React.createElement(\"button\",{onClick:this.resetCounters,style:{fontSize:'0.7em',padding:'0.2em 0.5em',backgroundColor:theme.primaryColor,color:'white',border:'none',borderRadius:'0.3em',cursor:'pointer'},title:\"Reset counters\"},\"\\uD83D\\uDD04 Reset\")),/*#__PURE__*/React.createElement(\"div\",{tabIndex:0,style:{height:f_height,width:'auto',border:this.state.isFocused?f_focused:f_not_focused,borderRadius:'0.5em',overflowY:'scroll',overflowX:'hidden',position:'relative',backgroundColor:theme.secondaryBackgroundColor},onFocus:this._onFocus,onBlur:this._onBlur},/*#__PURE__*/React.createElement(\"textarea\",{style:{marginLeft:'0.5em',fontFamily:font_fam,marginTop:'0.2em',whiteSpace:'pre-wrap',width:'calc(100% - 1.2em)',height:'100%',border:'none',outline:'none',position:'absolute',backgroundColor:'transparent',color:theme.base==='light'?'rgba(41,51,62,0.5)':'rgba(255,255,255,0.5)',padding:'0'},value:this.state.suggestion,readOnly:true,ref:textarea=>{this.suggestionTextarea=textarea;}}),/*#__PURE__*/React.createElement(\"textarea\",{style:{marginLeft:'0.5em',fontFamily:font_fam,marginTop:'0.2em',whiteSpace:'pre-wrap',width:'calc(100% - 1.2em)',height:'100%',border:'none',outline:'none',position:'absolute',backgroundColor:'transparent',color:theme.textColor,padding:'0'},value:this.state.text,onChange:this.onChange,onKeyDown:this.onKeyDown,onBlur:this._onTextAreaBlur,onScroll:this.onScroll,ref:textarea=>{this.userTextarea=textarea;}})));};this.onScroll=()=>{this.forceUpdate();};this.onChange=event=>{const text=event.target.value;const api_upl=this.props.args[\"api_url\"];this.setState({text,suggestion:\"\"},()=>{if(text.trim()!==\"\"){this.callApi(text,api_upl).then(suggestion=>{if(this.state.text.trim()!==\"\"){this.setState({suggestion:this.state.text+suggestion});}});}});};this.onKeyDown=event=>{if(event.key==='Tab'){event.preventDefault();this.setState(prevState=>({text:prevState.suggestion,suggestion:''}),()=>{// Create a synthetic event and call onChange manually\nconst syntheticEvent={target:{value:this.state.text}};this.onChange(syntheticEvent);});}};this._onTextAreaBlur=()=>{this.setState({textAreaIsFocused:false},()=>{Streamlit.setComponentValue(this.state.text);this.setState({suggestion:''});});};this._onFocus=()=>{this.setState({isFocused:true});};this._onBlur=()=>{this.setState({isFocused:false});};this.resetCounters=()=>{this.setState({totalRequests:0,successfulRequests:0,failedRequests:0,requestsThisMinute:0,inputCost:0,outputCost:0,totalCost:0});};this.abortController=new AbortController();this.callApi=async(text,api_upl)=>{// Abort the previous request\nthis.abortController.abort();this.abortController=new AbortController();if(text.trim()===\"\"){return\"\";}const currentMinute=Math.floor(Date.now()/60000);if(currentMinute>this.state.currentMinute){this.setState({currentMinute:currentMinute,requestsThisMinute:0});}else if(this.state.requestsThisMinute>this.props.args[\"rpm_limit\"]){// Retry after 1 second if limit is exceeded\nreturn new Promise(resolve=>{setTimeout(()=>{resolve(this.callApi(text,api_upl));},1000);});}const{prompt_template,api_url,api_key,height,fontFamily,border,text:questionText,question_title,...model_kwargs}=this.props.args;const prompt=prompt_template.replace(\"{text}\",questionText||\"\").replace(\"{question_title}\",question_title||\"\");// format the prompt with both placeholders\n// Generalize to support both chat and legacy completions APIs, not just Groq\n// Determine if the API expects chat format (messages) or legacy format (prompt)\n// Use a prop or model_kwargs to allow user to specify the format, fallback to auto-detect\nconst isChatApi=this.props.args[\"api_format\"]===\"chat\"||api_upl.includes('/chat/completions');let payload;if(isChatApi){// Use chat completions format for any compatible API\nconst validParams={};if(model_kwargs.model)validParams.model=model_kwargs.model;if(model_kwargs.max_tokens)validParams.max_tokens=model_kwargs.max_tokens;if(model_kwargs.temperature)validParams.temperature=model_kwargs.temperature;if(model_kwargs.top_p)validParams.top_p=model_kwargs.top_p;if(model_kwargs.stop)validParams.stop=model_kwargs.stop;payload={messages:[{role:\"user\",content:prompt}],...validParams,stream:false};}else{// Use legacy completions format for other APIs\npayload={prompt:prompt,...model_kwargs,echo:false};}const headers={'Content-Type':'application/json'};// Add API key if provided\nif(api_key){headers['Authorization']=\"Bearer \".concat(api_key);}try{var _responseJson$usage,_responseJson$usage2;// Increment total requests counter\nthis.setState(prevState=>({totalRequests:prevState.totalRequests+1}));const response=await fetch(api_upl,{method:\"POST\",headers:headers,body:JSON.stringify(payload),signal:this.abortController.signal});if(!response.ok){const errorText=await response.text();console.error(\"API Error Response:\",errorText);// Increment failed requests counter\nthis.setState(prevState=>({failedRequests:prevState.failedRequests+1}));throw new Error(\"HTTP error! status: \".concat(response.status));}this.setState(prevState=>({requestsThisMinute:prevState.requestsThisMinute+1,successfulRequests:prevState.successfulRequests+1}));const responseJson=await response.json();// Calculate costs based on token usage\nconst inputTokens=((_responseJson$usage=responseJson.usage)===null||_responseJson$usage===void 0?void 0:_responseJson$usage.prompt_tokens)||0;const outputTokens=((_responseJson$usage2=responseJson.usage)===null||_responseJson$usage2===void 0?void 0:_responseJson$usage2.completion_tokens)||0;const inputPrice=this.props.args[\"token_cost\"]||0.05;const outputPrice=this.props.args[\"output_token_cost\"]||0.10;// If no usage info, estimate based on text length (rough approximation)\nconst estimatedInputTokens=inputTokens||Math.ceil(prompt.length/4);const estimatedOutputTokens=outputTokens||0;const newInputCost=estimatedInputTokens/1000000*inputPrice;const newOutputCost=estimatedOutputTokens/1000000*outputPrice;this.setState(prevState=>({inputCost:prevState.inputCost+newInputCost,outputCost:prevState.outputCost+newOutputCost,totalCost:prevState.totalCost+newInputCost+newOutputCost}));// Handle both chat completions and legacy completions formats\nlet fullResponse=\"\";if(isChatApi&&responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].message){fullResponse=responseJson.choices[0].message.content;}else if(responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].text){fullResponse=responseJson.choices[0].text;}else{console.error(\"Unexpected response format:\",responseJson);return\"\";}// Log the full response to console (this will show the thinking process)\nconsole.log(\"Full AI Response:\",fullResponse);// Extract only the content after <answer> tag\nlet extractedAnswer=\"\";const answerTagIndex=fullResponse.indexOf(\"<answer>\");if(answerTagIndex!==-1){extractedAnswer=fullResponse.substring(answerTagIndex+8);// 8 is the length of \"<answer>\"\n// Remove any trailing tags or extra content\nconst endTagIndex=extractedAnswer.indexOf(\"</answer>\");if(endTagIndex!==-1){extractedAnswer=extractedAnswer.substring(0,endTagIndex);}}else{// If no <answer> tag found, return the full response\nextractedAnswer=fullResponse;}// Log the extracted answer for debugging\nconsole.log(\"Extracted Answer:\",extractedAnswer);return extractedAnswer;}catch(error){if(error instanceof Error&&error.name==='AbortError'){return\"\";// Return empty string if request was aborted\n}console.error(\"Error decoding response\",error);return\"\";}};}componentDidUpdate(){if(this.userTextarea&&this.suggestionTextarea){this.suggestionTextarea.scrollTop=this.userTextarea.scrollTop;}}}export default withStreamlitConnection(Copilot);","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","Streamlit","React","Copilot","userTextarea","suggestionTextarea","state","requestsThisMinute","currentMinute","Math","floor","Date","now","totalRequests","successfulRequests","failedRequests","inputCost","outputCost","totalCost","render","theme","props","height_int","args","font_fam","font","f_height","f_focused","primaryColor","f_not_focused","secondaryBackgroundColor","fontSize","color","textColor","marginBottom","padding","backgroundColor","borderRadius","border","display","justifyContent","alignItems","toFixed","resetCounters","cursor","height","width","isFocused","overflowY","overflowX","position","_onFocus","_onBlur","marginLeft","fontFamily","marginTop","whiteSpace","outline","base","suggestion","textarea","text","onChange","onKeyDown","_onTextAreaBlur","onScroll","forceUpdate","event","target","value","api_upl","setState","trim","callApi","then","key","preventDefault","prevState","syntheticEvent","textAreaIsFocused","setComponentValue","abortController","AbortController","abort","Promise","resolve","setTimeout","prompt_template","api_url","api_key","questionText","question_title","model_kwargs","prompt","replace","isChatApi","includes","payload","validParams","model","max_tokens","temperature","top_p","stop","messages","role","content","stream","echo","headers","response","fetch","method","body","JSON","stringify","signal","ok","errorText","console","error","Error","status","responseJson","json","inputTokens","usage","prompt_tokens","outputTokens","completion_tokens","inputPrice","outputPrice","estimatedInputTokens","ceil","length","estimatedOutputTokens","newInputCost","newOutputCost","fullResponse","choices","message","log","extractedAnswer","answerTagIndex","indexOf","substring","endTagIndex","name","componentDidUpdate","scrollTop"],"sources":["/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/src/streamlit_copilot.tsx"],"sourcesContent":["import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  Streamlit,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  text: string\n  suggestion: string\n  isFocused: boolean\n  textAreaIsFocused: boolean\n  requestsThisMinute: number\n  currentMinute: number\n  totalRequests: number\n  successfulRequests: number\n  failedRequests: number\n  inputCost: number\n  outputCost: number\n  totalCost: number\n}\n\nclass Copilot extends StreamlitComponentBase<State> {\n\n  private userTextarea: HTMLTextAreaElement | null = null;\n  private suggestionTextarea: HTMLTextAreaElement | null = null;\n  public state = {\n    \"text\": \"\",\n    \"suggestion\": \"\",\n    \"isFocused\": false,\n    'textAreaIsFocused': false,\n    requestsThisMinute: 0,\n    currentMinute: Math.floor(Date.now() / 60000),\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    inputCost: 0,\n    outputCost: 0,\n    totalCost: 0\n  }\n\n  public render = (): ReactNode => {\n    const { theme } = this.props\n    if (!theme) {\n      return <div>Theme is undefined, please check streamlit version.</div>\n    }\n    const height_int = this.props.args[\"height\"]\n    const font_fam = theme.font;\n\n    const f_height = height_int + 'px';\n\n    const f_focused = '1px solid ' + theme.primaryColor;\n    const f_not_focused = '1px solid ' + theme.secondaryBackgroundColor;\n\n    return (\n        <div>\n          {/* Request Counter Display */}\n          <div style={{\n            fontSize: '1em',\n            color: theme.textColor,\n            marginBottom: '0.5em',\n            padding: '0.5em',\n            backgroundColor: theme.backgroundColor,\n            borderRadius: '0.3em',\n            border: '1px solid ' + theme.secondaryBackgroundColor,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n            <div>\n               <strong>API Stats:</strong> Total: {this.state.totalRequests} | \n              ✅ Success: {this.state.successfulRequests} | \n              ❌ Failed: {this.state.failedRequests} | \n              {/* Shows how many API requests have been made in the current minute, out of the allowed requests per minute (RPM) limit */}\n              Requests this per minute / limit: {this.state.requestsThisMinute} / {this.props.args[\"rpm_limit\"]} \n              <br />\n              <strong>Cost:</strong> Input: ${this.state.inputCost.toFixed(6)} | Output: ${this.state.outputCost.toFixed(6)} | Total: ${this.state.totalCost.toFixed(6)}\n              \n              \n            </div>\n            <button\n              onClick={this.resetCounters}\n              style={{\n                fontSize: '0.7em',\n                padding: '0.2em 0.5em',\n                backgroundColor: theme.primaryColor,\n                color: 'white',\n                border: 'none',\n                borderRadius: '0.3em',\n                cursor: 'pointer'\n              }}\n              title=\"Reset counters\"\n            >\n              🔄 Reset\n            </button>\n          </div>\n          \n          <div\n            tabIndex={0}\n            style={\n              {\n                height:f_height,\n                width:'auto',\n                border:this.state.isFocused ? f_focused: f_not_focused,\n                borderRadius:'0.5em',\n                overflowY:'scroll',\n                overflowX:'hidden',\n                position: 'relative',\n                backgroundColor: theme.secondaryBackgroundColor\n              }\n            }\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          >\n            <textarea\n              style={\n                {\n                  marginLeft:'0.5em',\n                  fontFamily:font_fam,\n                  marginTop:'0.2em',\n                  whiteSpace: 'pre-wrap',\n                  width:  'calc(100% - 1.2em)',\n                  height: '100%',\n                  border: 'none',\n                  outline: 'none',\n                  position: 'absolute',\n                  backgroundColor: 'transparent',\n                  color: theme.base === 'light' ? 'rgba(41,51,62,0.5)' : 'rgba(255,255,255,0.5)',\n                  padding: '0'\n                }\n              }\n              value={this.state.suggestion}\n              readOnly\n              ref={(textarea) => { this.suggestionTextarea = textarea; }}\n            />\n            <textarea\n              style={\n              {\n                marginLeft:'0.5em',\n                fontFamily:font_fam,\n                marginTop:'0.2em',\n                whiteSpace: 'pre-wrap',\n                width:  'calc(100% - 1.2em)',\n                height: '100%',\n                border: 'none',\n                outline: 'none',\n                position: 'absolute',\n                backgroundColor: 'transparent',\n                color:theme.textColor,\n                padding: '0'\n              }\n            }\n              value={this.state.text}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              onBlur={this._onTextAreaBlur}\n              onScroll={this.onScroll}\n              ref={(textarea) => { this.userTextarea = textarea; }}\n            />\n          </div>\n        </div>\n    )\n  }\n\n  public componentDidUpdate(): void {\n  if (this.userTextarea && this.suggestionTextarea) {\n    this.suggestionTextarea.scrollTop = this.userTextarea.scrollTop;\n  }\n}\nprivate onScroll = (): void => {\n    this.forceUpdate();\n  }\n  private onChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n  const text = event.target.value\n  const api_upl = this.props.args[\"api_url\"]\n  this.setState({ text, suggestion: \"\" }, () => {\n    if (text.trim() !== \"\") {\n      this.callApi(text, api_upl).then(suggestion => {\n         if (this.state.text.trim() !== \"\") {\n          this.setState({ suggestion: this.state.text + suggestion })\n        }\n      })\n    }\n  })\n}\n\n\n  private onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\n  if (event.key === 'Tab') {\n    event.preventDefault()\n    this.setState(prevState => ({\n      text: prevState.suggestion,\n      suggestion: ''\n    }), () => {\n      // Create a synthetic event and call onChange manually\n      const syntheticEvent = {\n        target: { value: this.state.text }\n      } as React.ChangeEvent<HTMLTextAreaElement>;\n      this.onChange(syntheticEvent);\n    })\n  }\n}\n\n  private _onTextAreaBlur = (): void => {\n    this.setState({ textAreaIsFocused: false }, () => {\n      Streamlit.setComponentValue(this.state.text);\n      this.setState({ suggestion: '' });\n    });\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n\n  private resetCounters = (): void => {\n    this.setState({\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      requestsThisMinute: 0,\n      inputCost: 0,\n      outputCost: 0,\n      totalCost: 0\n    });\n  }\n\n  private abortController = new AbortController();\n\nprivate callApi = async (text: string, api_upl: string): Promise<string> => {\n  // Abort the previous request\n  this.abortController.abort();\n  this.abortController = new AbortController();\n\n  if (text.trim() === \"\") {\n    return \"\";\n  }\n\n  const currentMinute = Math.floor(Date.now() / 60000);\n  if (currentMinute > this.state.currentMinute) {\n    this.setState({\n      currentMinute: currentMinute,\n      requestsThisMinute: 0\n    });\n  } else if (this.state.requestsThisMinute > this.props.args[\"rpm_limit\"]) {\n    // Retry after 1 second if limit is exceeded\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(this.callApi(text, api_upl));\n      }, 1000);\n    });\n  }\n\n  const {prompt_template, api_url, api_key, height, fontFamily, border, text: questionText, question_title, ...model_kwargs} = this.props.args;\n  const prompt = prompt_template\n    .replace(\"{text}\", questionText || \"\")\n    .replace(\"{question_title}\", question_title || \"\"); // format the prompt with both placeholders\n  \n  // Generalize to support both chat and legacy completions APIs, not just Groq\n  // Determine if the API expects chat format (messages) or legacy format (prompt)\n  // Use a prop or model_kwargs to allow user to specify the format, fallback to auto-detect\n  const isChatApi = (\n    this.props.args[\"api_format\"] === \"chat\" ||\n    api_upl.includes('/chat/completions')\n  );\n\n  let payload;\n  if (isChatApi) {\n    // Use chat completions format for any compatible API\n    const validParams: any = {};\n    if (model_kwargs.model) validParams.model = model_kwargs.model;\n    if (model_kwargs.max_tokens) validParams.max_tokens = model_kwargs.max_tokens;\n    if (model_kwargs.temperature) validParams.temperature = model_kwargs.temperature;\n    if (model_kwargs.top_p) validParams.top_p = model_kwargs.top_p;\n    if (model_kwargs.stop) validParams.stop = model_kwargs.stop;\n\n    payload = {\n      messages: [\n        {\n          role: \"user\",\n          content: prompt\n        }\n      ],\n      ...validParams,\n      stream: false\n    };\n  } else {\n    // Use legacy completions format for other APIs\n    payload = {\n      prompt: prompt,\n      ...model_kwargs,\n      echo: false\n    };\n  }\n  \n  const headers: Record<string, string> = {\n    'Content-Type': 'application/json'\n  };\n  \n  // Add API key if provided\n  if (api_key) {\n    headers['Authorization'] = `Bearer ${api_key}`;\n  }\n\n  try {\n    // Increment total requests counter\n    this.setState(prevState => ({\n      totalRequests: prevState.totalRequests + 1\n    }));\n    \n    const response = await fetch(api_upl, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(payload),\n      signal: this.abortController.signal\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"API Error Response:\", errorText);\n      \n      // Increment failed requests counter\n      this.setState(prevState => ({\n        failedRequests: prevState.failedRequests + 1\n      }));\n      \n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    this.setState(prevState => ({\n      requestsThisMinute: prevState.requestsThisMinute + 1,\n      successfulRequests: prevState.successfulRequests + 1\n    }));\n\n    const responseJson = await response.json();\n    \n    // Calculate costs based on token usage\n    const inputTokens = responseJson.usage?.prompt_tokens || 0;\n    const outputTokens = responseJson.usage?.completion_tokens || 0;\n    \n    const inputPrice = this.props.args[\"token_cost\"] || 0.05;\n    const outputPrice = this.props.args[\"output_token_cost\"] || 0.10;\n    \n    // If no usage info, estimate based on text length (rough approximation)\n    const estimatedInputTokens = inputTokens || Math.ceil(prompt.length / 4);\n    const estimatedOutputTokens = outputTokens || 0;\n    \n    const newInputCost = (estimatedInputTokens / 1_000_000) * inputPrice;\n    const newOutputCost = (estimatedOutputTokens / 1_000_000) * outputPrice;\n    \n    this.setState(prevState => ({\n      inputCost: prevState.inputCost + newInputCost,\n      outputCost: prevState.outputCost + newOutputCost,\n      totalCost: prevState.totalCost + newInputCost + newOutputCost\n    }));\n    \n    // Handle both chat completions and legacy completions formats\n    let fullResponse = \"\";\n    if (isChatApi && responseJson.choices && responseJson.choices[0] && responseJson.choices[0].message) {\n      fullResponse = responseJson.choices[0].message.content;\n    } else if (responseJson.choices && responseJson.choices[0] && responseJson.choices[0].text) {\n      fullResponse = responseJson.choices[0].text;\n    } else {\n      console.error(\"Unexpected response format:\", responseJson);\n      return \"\";\n    }\n    \n    // Log the full response to console (this will show the thinking process)\n    console.log(\"Full AI Response:\", fullResponse);\n    \n    // Extract only the content after <answer> tag\n    let extractedAnswer = \"\";\n    const answerTagIndex = fullResponse.indexOf(\"<answer>\");\n    if (answerTagIndex !== -1) {\n      extractedAnswer = fullResponse.substring(answerTagIndex + 8); // 8 is the length of \"<answer>\"\n      // Remove any trailing tags or extra content\n      const endTagIndex = extractedAnswer.indexOf(\"</answer>\");\n      if (endTagIndex !== -1) {\n        extractedAnswer = extractedAnswer.substring(0, endTagIndex);\n      }\n    } else {\n      // If no <answer> tag found, return the full response\n      extractedAnswer = fullResponse;\n    }\n    \n    // Log the extracted answer for debugging\n    console.log(\"Extracted Answer:\", extractedAnswer);\n    \n    return extractedAnswer;\n  } catch (error) {\n    if (error instanceof Error && error.name === 'AbortError') {\n      return \"\";  // Return empty string if request was aborted\n    }\n    console.error(\"Error decoding response\", error);\n    return \"\";\n  }\n}\n}\n\nexport default withStreamlitConnection(Copilot)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}