{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nvar _objectWithoutProperties = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nconst _excluded = [\"baseURL\", \"apiKey\", \"apiVersion\", \"endpoint\", \"deployment\", \"azureADTokenProvider\", \"dangerouslyAllowBrowser\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AzureOpenAI = void 0;\nconst tslib_1 = require(\"./internal/tslib.js\");\nconst Errors = tslib_1.__importStar(require(\"./error.js\"));\nconst utils_1 = require(\"./internal/utils.js\");\nconst client_1 = require(\"./client.js\");\nconst headers_1 = require(\"./internal/headers.js\");\n/** API Client for interfacing with the Azure OpenAI API. */\nclass AzureOpenAI extends client_1.OpenAI {\n  /**\n   * API Client for interfacing with the Azure OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n   * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n   * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor() {\n    var _apiKey;\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      {\n        baseURL = (0, utils_1.readEnv)('OPENAI_BASE_URL'),\n        apiKey = (0, utils_1.readEnv)('AZURE_OPENAI_API_KEY'),\n        apiVersion = (0, utils_1.readEnv)('OPENAI_API_VERSION'),\n        endpoint,\n        deployment,\n        azureADTokenProvider,\n        dangerouslyAllowBrowser\n      } = _ref,\n      opts = _objectWithoutProperties(_ref, _excluded);\n    if (!apiVersion) {\n      throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n    }\n    if (typeof azureADTokenProvider === 'function') {\n      dangerouslyAllowBrowser = true;\n    }\n    if (!azureADTokenProvider && !apiKey) {\n      throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n    }\n    if (azureADTokenProvider && apiKey) {\n      throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n    }\n    // define a sentinel value to avoid any typing issues\n    (_apiKey = apiKey) !== null && _apiKey !== void 0 ? _apiKey : apiKey = API_KEY_SENTINEL;\n    opts.defaultQuery = _objectSpread(_objectSpread({}, opts.defaultQuery), {}, {\n      'api-version': apiVersion\n    });\n    if (!baseURL) {\n      if (!endpoint) {\n        endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n      }\n      if (!endpoint) {\n        throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n      }\n      baseURL = \"\".concat(endpoint, \"/openai\");\n    } else {\n      if (endpoint) {\n        throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n      }\n    }\n    super(_objectSpread(_objectSpread({\n      apiKey,\n      baseURL\n    }, opts), dangerouslyAllowBrowser !== undefined ? {\n      dangerouslyAllowBrowser\n    } : {}));\n    this.apiVersion = '';\n    this._azureADTokenProvider = azureADTokenProvider;\n    this.apiVersion = apiVersion;\n    this.deploymentName = deployment;\n  }\n  async buildRequest(options) {\n    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n      var _options$__metadata;\n      if (!(0, utils_1.isObj)(options.body)) {\n        throw new Error('Expected request body to be an object');\n      }\n      const model = this.deploymentName || options.body['model'] || ((_options$__metadata = options.__metadata) === null || _options$__metadata === void 0 ? void 0 : _options$__metadata['model']);\n      if (model !== undefined && !this.baseURL.includes('/deployments')) {\n        options.path = \"/deployments/\".concat(model).concat(options.path);\n      }\n    }\n    return super.buildRequest(options, props);\n  }\n  async _getAzureADToken() {\n    if (typeof this._azureADTokenProvider === 'function') {\n      const token = await this._azureADTokenProvider();\n      if (!token || typeof token !== 'string') {\n        throw new Errors.OpenAIError(\"Expected 'azureADTokenProvider' argument to return a string but it returned \".concat(token));\n      }\n      return token;\n    }\n    return undefined;\n  }\n  async authHeaders(opts) {\n    return;\n  }\n  async prepareOptions(opts) {\n    opts.headers = (0, headers_1.buildHeaders)([opts.headers]);\n    /**\n     * The user should provide a bearer token provider if they want\n     * to use Azure AD authentication. The user shouldn't set the\n     * Authorization header manually because the header is overwritten\n     * with the Azure AD token if a bearer token provider is provided.\n     */\n    if (opts.headers.values.get('Authorization') || opts.headers.values.get('api-key')) {\n      return super.prepareOptions(opts);\n    }\n    const token = await this._getAzureADToken();\n    if (token) {\n      opts.headers.values.set('Authorization', \"Bearer \".concat(token));\n    } else if (this.apiKey !== API_KEY_SENTINEL) {\n      opts.headers.values.set('api-key', this.apiKey);\n    } else {\n      throw new Errors.OpenAIError('Unable to handle auth');\n    }\n    return super.prepareOptions(opts);\n  }\n}\nexports.AzureOpenAI = AzureOpenAI;\nconst _deployments_endpoints = new Set(['/completions', '/chat/completions', '/embeddings', '/audio/transcriptions', '/audio/translations', '/audio/speech', '/images/generations', '/batches', '/images/edits']);\nconst API_KEY_SENTINEL = '<Missing Key>';","map":{"version":3,"mappings":"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","names":["AzureOpenAI","client_1","constructor","baseURL","apiKey","apiVersion","endpoint","deployment","azureADTokenProvider","dangerouslyAllowBrowser","opts","Errors","OpenAIError","API_KEY_SENTINEL","defaultQuery","process","env","undefined","_azureADTokenProvider","deploymentName","buildRequest","options","props","_deployments_endpoints","has","path","method","body","Error","model","__metadata","includes","_getAzureADToken","token","authHeaders","prepareOptions","headers","values","get","set","exports","Set"],"sourceRoot":"","sources":["src/azure.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}