{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranscriptionSessions = void 0;\nconst resource_1 = require(\"../../../core/resource.js\");\nconst headers_1 = require(\"../../../internal/headers.js\");\nclass TranscriptionSessions extends resource_1.APIResource {\n  /**\n   * Create an ephemeral API token for use in client-side applications with the\n   * Realtime API specifically for realtime transcriptions. Can be configured with\n   * the same session parameters as the `transcription_session.update` client event.\n   *\n   * It responds with a session object, plus a `client_secret` key which contains a\n   * usable ephemeral API token that can be used to authenticate browser clients for\n   * the Realtime API.\n   *\n   * @example\n   * ```ts\n   * const transcriptionSession =\n   *   await client.beta.realtime.transcriptionSessions.create();\n   * ```\n   */\n  create(body, options) {\n    return this._client.post('/realtime/transcription_sessions', _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n}\nexports.TranscriptionSessions = TranscriptionSessions;","map":{"version":3,"mappings":";;AAAA;AAAA;;;;;AAEA;AAEA;AAGA,MAAaA,qBAAsB,SAAQC,sBAAW;EACpD;;;;;;;;;;;;;;;EAeAC,MAAM,CAACC,IAAsC,EAAEC,OAAwB;IACrE,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kCAAkC;MACzDH;IAAI,GACDC,OAAO;MACVG,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,OAAO,CAAC;IAAC,GAC7E;EACJ;;AAtBFC","names":["TranscriptionSessions","resource_1","create","body","options","_client","post","headers","exports"],"sourceRoot":"","sources":["../../../src/resources/beta/realtime/transcription-sessions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}