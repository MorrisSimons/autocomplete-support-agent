{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractMessage = void 0;\n/** @internal */\nconst extractMessage = async error => {\n  let message = await error.response.text();\n  // Error response is sometimes the raw message, sometimes it's JSON\n  // so we will try to parse out the actual message text, but\n  // we wrap it in a try to avoid crashing in a way that obscures\n  // the actual error if the response format changes in the future.\n  try {\n    const messageJSON = JSON.parse(message);\n    if (messageJSON.message) {\n      message = messageJSON.message;\n    }\n  } catch (e) {\n    // noop\n  }\n  return message;\n};\nexports.extractMessage = extractMessage;","map":{"version":3,"mappings":";;;;;;AAEA;AACO,MAAMA,cAAc,GAAG,MAAOC,KAAoB,IAAqB;EAC5E,IAAIC,OAAO,GAAG,MAAMD,KAAK,CAACE,QAAQ,CAACC,IAAI,EAAE;EAEzC;EACA;EACA;EACA;EACA,IAAI;IACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;IACvC,IAAIG,WAAW,CAACH,OAAO,EAAE;MACvBA,OAAO,GAAGG,WAAW,CAACH,OAAO;;GAEhC,CAAC,OAAOM,CAAC,EAAE;IACV;;EAGF,OAAON,OAAO;AAChB,CAAC;AAjBYO,sBAAc","names":["extractMessage","error","message","response","text","messageJSON","JSON","parse","e","exports"],"sourceRoot":"","sources":["../../src/errors/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}