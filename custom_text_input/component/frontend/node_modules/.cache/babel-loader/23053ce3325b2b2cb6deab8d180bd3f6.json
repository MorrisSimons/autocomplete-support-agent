{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configureIndex = exports.ConfigureIndexRequestProperties = void 0;\nconst errors_1 = require(\"../errors\");\nconst validateObjectProperties_1 = require(\"../utils/validateObjectProperties\");\nconst utils_1 = require(\"../utils\");\nexports.ConfigureIndexRequestProperties = ['deletionProtection', 'spec', 'tags', 'embed'];\nconst configureIndex = api => {\n  const validator = (indexName, options) => {\n    if (options) {\n      (0, validateObjectProperties_1.ValidateObjectProperties)(options, exports.ConfigureIndexRequestProperties);\n    }\n    if (!indexName) {\n      throw new errors_1.PineconeArgumentError('You must pass a non-empty string for `indexName` to configureIndex.');\n    }\n    // !options.deletionProtection evaluates to false if options.deletionProtection is undefined, empty string, or\n    // not provided\n    if (!options.spec && !options.deletionProtection && !options.tags && !options.embed) {\n      throw new errors_1.PineconeArgumentError('You must pass either `spec`, `deletionProtection`, `tags`, or `embed` to configureIndex in order to update.');\n    }\n    if (options.spec) {\n      if (options.spec.pod) {\n        (0, validateObjectProperties_1.ValidateObjectProperties)(options.spec.pod, ['replicas', 'podType']);\n      }\n      if (options.spec.pod && options.spec.pod.replicas) {\n        if (options.spec.pod.replicas <= 0) {\n          throw new errors_1.PineconeArgumentError('`replicas` must be a positive integer.');\n        }\n      }\n    }\n  };\n  return async (indexName, options, maxRetries) => {\n    validator(indexName, options);\n    const retryWrapper = new utils_1.RetryOnServerFailure(api.configureIndex.bind(api), maxRetries);\n    return await retryWrapper.execute({\n      indexName,\n      configureIndexRequest: options\n    });\n  };\n};\nexports.configureIndex = configureIndex;","map":{"version":3,"mappings":";;;;;;AAKA;AAEA;AACA;AAIaA,uCAA+B,GAAgC,CAC1E,oBAAoB,EACpB,MAAM,EACN,MAAM,EACN,OAAO,CACR;AAEM,MAAMC,cAAc,GAAIC,GAAqB,IAAI;EACtD,MAAMC,SAAS,GAAG,CAACC,SAAoB,EAAEC,OAA8B,KAAI;IACzE,IAAIA,OAAO,EAAE;MACX,uDAAwB,EAACA,OAAO,EAAEL,uCAA+B,CAAC;;IAGpE,IAAI,CAACI,SAAS,EAAE;MACd,MAAM,IAAIE,8BAAqB,CAC7B,qEAAqE,CACtE;;IAEH;IACA;IACA,IACE,CAACD,OAAO,CAACE,IAAI,IACb,CAACF,OAAO,CAACG,kBAAkB,IAC3B,CAACH,OAAO,CAACI,IAAI,IACb,CAACJ,OAAO,CAACK,KAAK,EACd;MACA,MAAM,IAAIJ,8BAAqB,CAC7B,6GAA6G,CAC9G;;IAEH,IAAID,OAAO,CAACE,IAAI,EAAE;MAChB,IAAIF,OAAO,CAACE,IAAI,CAACI,GAAG,EAAE;QACpB,uDAAwB,EAACN,OAAO,CAACE,IAAI,CAACI,GAAG,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;;MAErE,IAAIN,OAAO,CAACE,IAAI,CAACI,GAAG,IAAIN,OAAO,CAACE,IAAI,CAACI,GAAG,CAACC,QAAQ,EAAE;QACjD,IAAIP,OAAO,CAACE,IAAI,CAACI,GAAG,CAACC,QAAQ,IAAI,CAAC,EAAE;UAClC,MAAM,IAAIN,8BAAqB,CAC7B,wCAAwC,CACzC;;;;EAIT,CAAC;EAED,OAAO,OACLF,SAAoB,EACpBC,OAA8B,EAC9BQ,UAAmB,KACI;IACvBV,SAAS,CAACC,SAAS,EAAEC,OAAO,CAAC;IAE7B,MAAMS,YAAY,GAAG,IAAIC,4BAAoB,CAC3Cb,GAAG,CAACD,cAAc,CAACe,IAAI,CAACd,GAAG,CAAC,EAC5BW,UAAU,CACX;IAED,OAAO,MAAMC,YAAY,CAACG,OAAO,CAAC;MAChCb,SAAS;MACTc,qBAAqB,EAAEb;KACxB,CAAC;EACJ,CAAC;AACH,CAAC;AAtDYL,sBAAc","names":["exports","configureIndex","api","validator","indexName","options","errors_1","spec","deletionProtection","tags","embed","pod","replicas","maxRetries","retryWrapper","utils_1","bind","execute","configureIndexRequest"],"sourceRoot":"","sources":["../../src/control/configureIndex.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}