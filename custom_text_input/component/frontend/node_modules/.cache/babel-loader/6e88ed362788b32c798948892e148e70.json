{"ast":null,"code":"import _objectSpread from\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";const _excluded=[\"prompt_template\",\"api_key\",\"height\",\"fontFamily\",\"border\",\"text\",\"question_title\"],_excluded2=[\"prompt_template\",\"api_url\",\"api_key\",\"height\",\"fontFamily\",\"border\",\"text\",\"question_title\"];import{StreamlitComponentBase,withStreamlitConnection,Streamlit}from\"streamlit-component-lib\";import React from\"react\";class Copilot extends StreamlitComponentBase{constructor(){super(...arguments);this.userTextarea=null;this.suggestionTextarea=null;this.state={\"text\":\"\",\"suggestion\":\"\",\"isFocused\":false,'textAreaIsFocused':false,requestsThisMinute:0,currentMinute:Math.floor(Date.now()/60000),totalRequests:0,successfulRequests:0,failedRequests:0,inputCost:0,outputCost:0,totalCost:0,debounceTimer:null};this.render=()=>{const{theme}=this.props;if(!theme){return/*#__PURE__*/React.createElement(\"div\",null,\"Theme is undefined, please check streamlit version.\");}const height_int=this.props.args[\"height\"];const font_fam=theme.font;const f_height=height_int+'px';const f_focused='1px solid '+theme.primaryColor;const f_not_focused='1px solid '+theme.secondaryBackgroundColor;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:'1em',color:theme.textColor,marginBottom:'0.5em',padding:'0.5em',backgroundColor:theme.backgroundColor,borderRadius:'0.3em',border:'1px solid '+theme.secondaryBackgroundColor,display:'flex',justifyContent:'space-between',alignItems:'center'}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"API Stats:\"),\" Total: \",this.state.totalRequests,\" | \\u2705 Success: \",this.state.successfulRequests,\" | \\u274C Failed: \",this.state.failedRequests,\" |\",\"Requests this per minute / limit: \",this.state.requestsThisMinute,\" / \",this.props.args[\"rpm_limit\"],/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,\"Cost:\"),\" Input: $\",this.state.inputCost.toFixed(6),\" | Output: $\",this.state.outputCost.toFixed(6),\" | Total: $\",this.state.totalCost.toFixed(6)),/*#__PURE__*/React.createElement(\"button\",{onClick:this.resetCounters,style:{fontSize:'0.7em',padding:'0.2em 0.5em',backgroundColor:theme.primaryColor,color:'white',border:'none',borderRadius:'0.3em',cursor:'pointer'},title:\"Reset counters\"},\"\\uD83D\\uDD04 Reset\")),/*#__PURE__*/React.createElement(\"div\",{tabIndex:0,style:{height:f_height,width:'auto',border:this.state.isFocused?f_focused:f_not_focused,borderRadius:'0.5em',overflowY:'scroll',overflowX:'hidden',position:'relative',backgroundColor:theme.secondaryBackgroundColor},onFocus:this._onFocus,onBlur:this._onBlur},/*#__PURE__*/React.createElement(\"textarea\",{style:{marginLeft:'0.5em',fontFamily:font_fam,marginTop:'0.2em',whiteSpace:'pre-wrap',width:'calc(100% - 1.2em)',height:'100%',border:'none',outline:'none',position:'absolute',backgroundColor:'transparent',color:theme.base==='light'?'rgba(41,51,62,0.5)':'rgba(255,255,255,0.5)',padding:'0'},value:this.state.suggestion,readOnly:true,ref:textarea=>{this.suggestionTextarea=textarea;}}),/*#__PURE__*/React.createElement(\"textarea\",{style:{marginLeft:'0.5em',fontFamily:font_fam,marginTop:'0.2em',whiteSpace:'pre-wrap',width:'calc(100% - 1.2em)',height:'100%',border:'none',outline:'none',position:'absolute',backgroundColor:'transparent',color:theme.textColor,padding:'0'},value:this.state.text,onChange:this.onChange,onKeyDown:this.onKeyDown,onBlur:this._onTextAreaBlur,onScroll:this.onScroll,ref:textarea=>{this.userTextarea=textarea;}})));};this.onScroll=()=>{this.forceUpdate();};this.onChange=event=>{const text=event.target.value;this.setState({text,suggestion:\"\"});// Clear any existing timer\nif(this.state.debounceTimer!==null){window.clearTimeout(this.state.debounceTimer);}// Set a new debounced timer (500ms delay)\nconst timer=window.setTimeout(()=>{if(text.trim()!==\"\"){const api_upl=this.props.args[\"api_url\"];this.callApi(text,api_upl).then(suggestion=>{if(this.state.text.trim()!==\"\"){this.setState({suggestion:this.state.text+suggestion});}});}},500);// Wait 500ms after user stops typing\nthis.setState({debounceTimer:timer});};this.onKeyDown=event=>{if(event.key==='Tab'){event.preventDefault();this.setState(prevState=>({text:prevState.suggestion,suggestion:''}),()=>{// Create a synthetic event and call onChange manually\nconst syntheticEvent={target:{value:this.state.text}};this.onChange(syntheticEvent);});}};this._onTextAreaBlur=()=>{this.setState({textAreaIsFocused:false},()=>{Streamlit.setComponentValue(this.state.text);this.setState({suggestion:''});});};this._onFocus=()=>{this.setState({isFocused:true});};this._onBlur=()=>{this.setState({isFocused:false});};this.resetCounters=()=>{this.setState({totalRequests:0,successfulRequests:0,failedRequests:0,requestsThisMinute:0,inputCost:0,outputCost:0,totalCost:0});};this.abortController=new AbortController();this.executeToolCalls=async toolCalls=>{const results=[];for(const toolCall of toolCalls){var _toolCall$function,_toolCall$function2;const functionName=(_toolCall$function=toolCall.function)===null||_toolCall$function===void 0?void 0:_toolCall$function.name;const args=JSON.parse(((_toolCall$function2=toolCall.function)===null||_toolCall$function2===void 0?void 0:_toolCall$function2.arguments)||'{}');console.log(\"Executing tool: \".concat(functionName,\" with args:\"),args);if(functionName==='search_knowledge_base'){// Execute the real Pinecone search tool\nconst toolResult=await this.executeTool(functionName,args);results.push(toolResult);}else{results.push(\"Unknown tool: \".concat(functionName));}}return results;};this.executeTool=async(toolName,args)=>{if(toolName==='search_knowledge_base'){// Extract query string safely\nlet query='';if(typeof args.query==='string'){query=args.query;}else if(args.query&&typeof args.query==='object'){// If query is an object, try to get the value\nquery=args.query.toString()||'';}else{query=String(args.query||'');}console.log(\"Processing query: \\\"\".concat(query,\"\\\"\"));// Use real Pinecone search if credentials are available\nconst pineconeApiKey=this.props.args[\"pinecone_api_key\"];const pineconeIndexName=this.props.args[\"pinecone_index_name\"];const openaiApiKey=this.props.args[\"openai_api_key\"];if(pineconeApiKey&&pineconeIndexName&&openaiApiKey){try{// Generate embedding using OpenAI REST API\nconst embeddingResponse=await fetch('https://api.openai.com/v1/embeddings',{method:'POST',headers:{'Authorization':\"Bearer \".concat(openaiApiKey),'Content-Type':'application/json'},body:JSON.stringify({model:this.props.args[\"embedding_model\"]||\"text-embedding-ada-002\",input:query})});if(!embeddingResponse.ok){throw new Error(\"OpenAI API error: \".concat(embeddingResponse.status));}const embeddingData=await embeddingResponse.json();const queryEmbedding=embeddingData.data[0].embedding;// Search Pinecone using REST API\nconst pineconeEnvironment=this.props.args[\"pinecone_environment\"];const pineconeHost=this.props.args[\"pinecone_host\"]||\"https://api.pinecone.io\";const indexUrl=\"\".concat(pineconeHost,\"/indexes/\").concat(pineconeIndexName,\"/query\");const searchResponse=await fetch(indexUrl,{method:'POST',headers:{'Api-Key':pineconeApiKey,'Content-Type':'application/json'},body:JSON.stringify({vector:queryEmbedding,topK:this.props.args[\"search_top\"]||3,includeMetadata:true})});if(!searchResponse.ok){throw new Error(\"Pinecone API error: \".concat(searchResponse.status));}const searchData=await searchResponse.json();if(searchData.matches&&searchData.matches.length>0){const results=searchData.matches.map(match=>{var _match$metadata,_match$metadata2;return((_match$metadata=match.metadata)===null||_match$metadata===void 0?void 0:_match$metadata.text)||((_match$metadata2=match.metadata)===null||_match$metadata2===void 0?void 0:_match$metadata2.content)||'No content';}).filter(text=>text!=='No content');if(results.length>0){return\"Found \".concat(results.length,\" relevant results:\\n\").concat(results.join('\\n\\n'));}}// No results found\nreturn\"\";}catch(error){console.error(\"Pinecone search error:\",error);return\"\";}}// No credentials available\nreturn\"\";}return\"\";};this.makeFollowUpCall=async(apiUrl,userInput,toolResults)=>{const followUpPrompt=\"Based on search results: \".concat(toolResults.join('\\n'),\"\\n\\nComplete: \\\"\").concat(userInput,\"\\\"\");const _this$props$args=this.props.args,{prompt_template,api_key,height,fontFamily,border,text:questionText,question_title}=_this$props$args,model_kwargs=_objectWithoutProperties(_this$props$args,_excluded);const prompt=prompt_template.replace(\"{text}\",questionText||\"\").replace(\"{question_title}\",question_title||\"\");const isChatApi=this.props.args[\"api_format\"]===\"chat\"||apiUrl.includes('/chat/completions');let payload;if(isChatApi){const validParams={};if(model_kwargs.model)validParams.model=model_kwargs.model;if(model_kwargs.max_tokens)validParams.max_tokens=model_kwargs.max_tokens;if(model_kwargs.temperature)validParams.temperature=model_kwargs.temperature;if(model_kwargs.top_p)validParams.top_p=model_kwargs.top_p;if(model_kwargs.stop)validParams.stop=model_kwargs.stop;payload=_objectSpread(_objectSpread({messages:[{role:\"user\",content:followUpPrompt}]},validParams),{},{stream:false});}else{payload=_objectSpread(_objectSpread({prompt:followUpPrompt},model_kwargs),{},{echo:false});}const headers={'Content-Type':'application/json'};if(api_key){headers['Authorization']=\"Bearer \".concat(api_key);}try{const response=await fetch(apiUrl,{method:\"POST\",headers:headers,body:JSON.stringify(payload),signal:this.abortController.signal});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const responseJson=await response.json();let fullResponse=\"\";if(isChatApi&&responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].message){fullResponse=responseJson.choices[0].message.content;}else if(responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].text){fullResponse=responseJson.choices[0].text;}else{console.error(\"Unexpected response format:\",responseJson);return\"\";}// Extract answer from response\nlet extractedAnswer=\"\";const answerTagIndex=fullResponse.indexOf(\"<answer>\");if(answerTagIndex!==-1){extractedAnswer=fullResponse.substring(answerTagIndex+8);const endTagIndex=extractedAnswer.indexOf(\"</answer>\");if(endTagIndex!==-1){extractedAnswer=extractedAnswer.substring(0,endTagIndex);}}else{extractedAnswer=fullResponse;}return extractedAnswer;}catch(error){console.error(\"Follow-up call error:\",error);return\"\";}};this.callApi=async(text,api_upl)=>{// Abort the previous request\nthis.abortController.abort();this.abortController=new AbortController();if(text.trim()===\"\"){return\"\";}const currentMinute=Math.floor(Date.now()/60000);if(currentMinute>this.state.currentMinute){this.setState({currentMinute:currentMinute,requestsThisMinute:0});}else if(this.state.requestsThisMinute>this.props.args[\"rpm_limit\"]){// Retry after 1 second if limit is exceeded\nreturn new Promise(resolve=>{setTimeout(()=>{resolve(this.callApi(text,api_upl));},1000);});}const _this$props$args2=this.props.args,{prompt_template,api_url,api_key,height,fontFamily,border,text:questionText,question_title}=_this$props$args2,model_kwargs=_objectWithoutProperties(_this$props$args2,_excluded2);const prompt=prompt_template.replace(\"{text}\",questionText||\"\").replace(\"{question_title}\",question_title||\"\");// format the prompt with both placeholders\n// Generalize to support both chat and legacy completions APIs, not just Groq\n// Determine if the API expects chat format (messages) or legacy format (prompt)\n// Use a prop or model_kwargs to allow user to specify the format, fallback to auto-detect\nconst isChatApi=this.props.args[\"api_format\"]===\"chat\"||api_upl.includes('/chat/completions');// Define tools for the API call\nconst tools=[{type:\"function\",function:{name:\"search_knowledge_base\",description:\"Search the Lysa knowledge base for customer support information\",parameters:{type:\"object\",properties:{query:{type:\"string\",description:\"Search query to find relevant information\"}},required:[\"query\"]}}}];let payload;if(isChatApi){// Use chat completions format for any compatible API\nconst validParams={};if(model_kwargs.model)validParams.model=model_kwargs.model;if(model_kwargs.max_tokens)validParams.max_tokens=model_kwargs.max_tokens;if(model_kwargs.temperature)validParams.temperature=model_kwargs.temperature;if(model_kwargs.top_p)validParams.top_p=model_kwargs.top_p;if(model_kwargs.stop)validParams.stop=model_kwargs.stop;payload=_objectSpread(_objectSpread({messages:[{role:\"user\",content:prompt}]},validParams),{},{tools:tools,tool_choice:\"auto\",stream:false});}else{// Use legacy completions format for other APIs\npayload=_objectSpread(_objectSpread({prompt:prompt},model_kwargs),{},{echo:false});}const headers={'Content-Type':'application/json'};// Add API key if provided\nif(api_key){headers['Authorization']=\"Bearer \".concat(api_key);}try{var _responseJson$usage,_responseJson$usage2;// Increment total requests counter\nthis.setState(prevState=>({totalRequests:prevState.totalRequests+1}));const response=await fetch(api_upl,{method:\"POST\",headers:headers,body:JSON.stringify(payload),signal:this.abortController.signal});if(!response.ok){const errorText=await response.text();console.error(\"API Error Response:\",errorText);// Increment failed requests counter\nthis.setState(prevState=>({failedRequests:prevState.failedRequests+1}));throw new Error(\"HTTP error! status: \".concat(response.status));}this.setState(prevState=>({requestsThisMinute:prevState.requestsThisMinute+1,successfulRequests:prevState.successfulRequests+1}));const responseJson=await response.json();// Calculate costs based on token usage\nconst inputTokens=((_responseJson$usage=responseJson.usage)===null||_responseJson$usage===void 0?void 0:_responseJson$usage.prompt_tokens)||0;const outputTokens=((_responseJson$usage2=responseJson.usage)===null||_responseJson$usage2===void 0?void 0:_responseJson$usage2.completion_tokens)||0;const inputPrice=this.props.args[\"token_cost\"]||0.05;const outputPrice=this.props.args[\"output_token_cost\"]||0.10;// If no usage info, estimate based on text length (rough approximation)\nconst estimatedInputTokens=inputTokens||Math.ceil(prompt.length/4);const estimatedOutputTokens=outputTokens||0;const newInputCost=estimatedInputTokens/1000000*inputPrice;const newOutputCost=estimatedOutputTokens/1000000*outputPrice;this.setState(prevState=>({inputCost:prevState.inputCost+newInputCost,outputCost:prevState.outputCost+newOutputCost,totalCost:prevState.totalCost+newInputCost+newOutputCost}));// Handle both chat completions and legacy completions formats\nlet fullResponse=\"\";let message=null;if(isChatApi&&responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].message){message=responseJson.choices[0].message;fullResponse=message.content||\"\";}else if(responseJson.choices&&responseJson.choices[0]&&responseJson.choices[0].text){fullResponse=responseJson.choices[0].text;}else{console.error(\"Unexpected response format:\",responseJson);return\"\";}// Log the full response to console (this will show the thinking process)\nconsole.log(\"Full AI Response:\",fullResponse);// Check if there are tool calls\nif(isChatApi&&message&&message.tool_calls&&message.tool_calls.length>0){console.log(\"Tool calls detected:\",message.tool_calls);// Execute the tool calls\nconst toolResults=await this.executeToolCalls(message.tool_calls);console.log(\"Tool execution results:\",toolResults);// Make a follow-up call with the tool results\nconst finalResponse=await this.makeFollowUpCall(api_upl,text,toolResults);return finalResponse;}// Extract only the content after <answer> tag\nlet extractedAnswer=\"\";const answerTagIndex=fullResponse.indexOf(\"<answer>\");if(answerTagIndex!==-1){extractedAnswer=fullResponse.substring(answerTagIndex+8);// 8 is the length of \"<answer>\"\n// Remove any trailing tags or extra content\nconst endTagIndex=extractedAnswer.indexOf(\"</answer>\");if(endTagIndex!==-1){extractedAnswer=extractedAnswer.substring(0,endTagIndex);}}else{// If no <answer> tag found, return the full response\nextractedAnswer=fullResponse;}// Log the extracted answer for debugging\nconsole.log(\"Extracted Answer:\",extractedAnswer);return extractedAnswer;}catch(error){if(error instanceof Error&&error.name==='AbortError'){return\"\";// Return empty string if request was aborted\n}console.error(\"Error decoding response\",error);return\"\";}};}componentDidUpdate(){if(this.userTextarea&&this.suggestionTextarea){this.suggestionTextarea.scrollTop=this.userTextarea.scrollTop;}}// Cleanup timer when component unmounts\ncomponentWillUnmount(){if(this.state.debounceTimer!==null){window.clearTimeout(this.state.debounceTimer);}}}export default withStreamlitConnection(Copilot);","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","Streamlit","React","Copilot","userTextarea","suggestionTextarea","state","requestsThisMinute","currentMinute","Math","floor","Date","now","totalRequests","successfulRequests","failedRequests","inputCost","outputCost","totalCost","debounceTimer","render","theme","props","height_int","args","font_fam","font","f_height","f_focused","primaryColor","f_not_focused","secondaryBackgroundColor","fontSize","color","textColor","marginBottom","padding","backgroundColor","borderRadius","border","display","justifyContent","alignItems","toFixed","resetCounters","cursor","height","width","isFocused","overflowY","overflowX","position","_onFocus","_onBlur","marginLeft","fontFamily","marginTop","whiteSpace","outline","base","suggestion","textarea","text","onChange","onKeyDown","_onTextAreaBlur","onScroll","forceUpdate","event","target","value","setState","window","clearTimeout","timer","setTimeout","trim","api_upl","callApi","then","key","preventDefault","prevState","syntheticEvent","textAreaIsFocused","setComponentValue","abortController","AbortController","executeToolCalls","toolCalls","results","toolCall","functionName","function","name","JSON","parse","arguments","console","log","toolResult","executeTool","push","toolName","query","toString","String","pineconeApiKey","pineconeIndexName","openaiApiKey","embeddingResponse","fetch","method","headers","body","stringify","model","input","ok","Error","status","embeddingData","json","queryEmbedding","data","embedding","pineconeEnvironment","pineconeHost","indexUrl","searchResponse","vector","topK","includeMetadata","searchData","matches","length","map","match","metadata","content","filter","join","error","makeFollowUpCall","apiUrl","userInput","toolResults","followUpPrompt","prompt_template","api_key","questionText","question_title","model_kwargs","prompt","replace","isChatApi","includes","payload","validParams","max_tokens","temperature","top_p","stop","messages","role","stream","echo","response","signal","responseJson","fullResponse","choices","message","extractedAnswer","answerTagIndex","indexOf","substring","endTagIndex","abort","Promise","resolve","api_url","tools","type","description","parameters","properties","required","tool_choice","errorText","inputTokens","usage","prompt_tokens","outputTokens","completion_tokens","inputPrice","outputPrice","estimatedInputTokens","ceil","estimatedOutputTokens","newInputCost","newOutputCost","tool_calls","finalResponse","componentDidUpdate","scrollTop","componentWillUnmount"],"sources":["/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/src/streamlit_copilot.tsx"],"sourcesContent":["import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  Streamlit,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  text: string\n  suggestion: string\n  isFocused: boolean\n  textAreaIsFocused: boolean\n  requestsThisMinute: number\n  currentMinute: number\n  totalRequests: number\n  successfulRequests: number\n  failedRequests: number\n  inputCost: number\n  outputCost: number\n  totalCost: number\n  debounceTimer: number | null\n}\n\nclass Copilot extends StreamlitComponentBase<State> {\n\n  private userTextarea: HTMLTextAreaElement | null = null;\n  private suggestionTextarea: HTMLTextAreaElement | null = null;\n  public state = {\n    \"text\": \"\",\n    \"suggestion\": \"\",\n    \"isFocused\": false,\n    'textAreaIsFocused': false,\n    requestsThisMinute: 0,\n    currentMinute: Math.floor(Date.now() / 60000),\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    inputCost: 0,\n    outputCost: 0,\n    totalCost: 0,\n    debounceTimer: null,\n  }\n\n  public render = (): ReactNode => {\n    const { theme } = this.props\n    if (!theme) {\n      return <div>Theme is undefined, please check streamlit version.</div>\n    }\n    const height_int = this.props.args[\"height\"]\n    const font_fam = theme.font;\n\n    const f_height = height_int + 'px';\n\n    const f_focused = '1px solid ' + theme.primaryColor;\n    const f_not_focused = '1px solid ' + theme.secondaryBackgroundColor;\n\n    return (\n        <div>\n          {/* Request Counter Display */}\n          <div style={{\n            fontSize: '1em',\n            color: theme.textColor,\n            marginBottom: '0.5em',\n            padding: '0.5em',\n            backgroundColor: theme.backgroundColor,\n            borderRadius: '0.3em',\n            border: '1px solid ' + theme.secondaryBackgroundColor,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n            <div>\n               <strong>API Stats:</strong> Total: {this.state.totalRequests} | \n              ✅ Success: {this.state.successfulRequests} | \n              ❌ Failed: {this.state.failedRequests} | \n              {/* Shows how many API requests have been made in the current minute, out of the allowed requests per minute (RPM) limit */}\n              Requests this per minute / limit: {this.state.requestsThisMinute} / {this.props.args[\"rpm_limit\"]} \n              <br />\n              <strong>Cost:</strong> Input: ${this.state.inputCost.toFixed(6)} | Output: ${this.state.outputCost.toFixed(6)} | Total: ${this.state.totalCost.toFixed(6)}\n              \n              \n            </div>\n            <button\n              onClick={this.resetCounters}\n              style={{\n                fontSize: '0.7em',\n                padding: '0.2em 0.5em',\n                backgroundColor: theme.primaryColor,\n                color: 'white',\n                border: 'none',\n                borderRadius: '0.3em',\n                cursor: 'pointer'\n              }}\n              title=\"Reset counters\"\n            >\n              🔄 Reset\n            </button>\n          </div>\n          \n          <div\n            tabIndex={0}\n            style={\n              {\n                height:f_height,\n                width:'auto',\n                border:this.state.isFocused ? f_focused: f_not_focused,\n                borderRadius:'0.5em',\n                overflowY:'scroll',\n                overflowX:'hidden',\n                position: 'relative',\n                backgroundColor: theme.secondaryBackgroundColor\n              }\n            }\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          >\n            <textarea\n              style={\n                {\n                  marginLeft:'0.5em',\n                  fontFamily:font_fam,\n                  marginTop:'0.2em',\n                  whiteSpace: 'pre-wrap',\n                  width:  'calc(100% - 1.2em)',\n                  height: '100%',\n                  border: 'none',\n                  outline: 'none',\n                  position: 'absolute',\n                  backgroundColor: 'transparent',\n                  color: theme.base === 'light' ? 'rgba(41,51,62,0.5)' : 'rgba(255,255,255,0.5)',\n                  padding: '0'\n                }\n              }\n              value={this.state.suggestion}\n              readOnly\n              ref={(textarea) => { this.suggestionTextarea = textarea; }}\n            />\n            <textarea\n              style={\n              {\n                marginLeft:'0.5em',\n                fontFamily:font_fam,\n                marginTop:'0.2em',\n                whiteSpace: 'pre-wrap',\n                width:  'calc(100% - 1.2em)',\n                height: '100%',\n                border: 'none',\n                outline: 'none',\n                position: 'absolute',\n                backgroundColor: 'transparent',\n                color:theme.textColor,\n                padding: '0'\n              }\n            }\n              value={this.state.text}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              onBlur={this._onTextAreaBlur}\n              onScroll={this.onScroll}\n              ref={(textarea) => { this.userTextarea = textarea; }}\n            />\n          </div>\n        </div>\n    )\n  }\n\n  public componentDidUpdate(): void {\n  if (this.userTextarea && this.suggestionTextarea) {\n    this.suggestionTextarea.scrollTop = this.userTextarea.scrollTop;\n  }\n}\n\n  private onScroll = (): void => {\n    this.forceUpdate();\n  }\n  private onChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const text = event.target.value\n    this.setState({ text, suggestion: \"\" })\n    \n    // Clear any existing timer\n    if (this.state.debounceTimer !== null) {\n      window.clearTimeout(this.state.debounceTimer!)\n    }\n    \n    // Set a new debounced timer (500ms delay)\n    const timer = window.setTimeout(() => {\n      if (text.trim() !== \"\") {\n        const api_upl = this.props.args[\"api_url\"]\n        this.callApi(text, api_upl).then(suggestion => {\n          if (this.state.text.trim() !== \"\") {\n            this.setState({ suggestion: this.state.text + suggestion })\n          }\n        })\n      }\n    }, 500) // Wait 500ms after user stops typing\n    \n    this.setState({ debounceTimer: timer })\n  }\n\n\n  private onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\n  if (event.key === 'Tab') {\n    event.preventDefault()\n    this.setState(prevState => ({\n      text: prevState.suggestion,\n      suggestion: ''\n    }), () => {\n      // Create a synthetic event and call onChange manually\n      const syntheticEvent = {\n        target: { value: this.state.text }\n      } as React.ChangeEvent<HTMLTextAreaElement>;\n      this.onChange(syntheticEvent);\n    })\n  }\n}\n\n  private _onTextAreaBlur = (): void => {\n    this.setState({ textAreaIsFocused: false }, () => {\n      Streamlit.setComponentValue(this.state.text);\n      this.setState({ suggestion: '' });\n    });\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n\n  private resetCounters = (): void => {\n    this.setState({\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      requestsThisMinute: 0,\n      inputCost: 0,\n      outputCost: 0,\n      totalCost: 0\n    });\n  }\n\n  // Cleanup timer when component unmounts\n  componentWillUnmount(): void {\n    if (this.state.debounceTimer !== null) {\n      window.clearTimeout(this.state.debounceTimer!)\n    }\n  }\n\n  private abortController = new AbortController();\n\n  // Add tool call execution method\n  private executeToolCalls = async (toolCalls: any[]): Promise<string[]> => {\n    const results: string[] = [];\n    \n    for (const toolCall of toolCalls) {\n      const functionName = toolCall.function?.name;\n      const args = JSON.parse(toolCall.function?.arguments || '{}');\n      \n      console.log(`Executing tool: ${functionName} with args:`, args);\n      \n      if (functionName === 'search_knowledge_base') {\n        // Execute the real Pinecone search tool\n        const toolResult = await this.executeTool(functionName, args);\n        results.push(toolResult);\n      } else {\n        results.push(`Unknown tool: ${functionName}`);\n      }\n    }\n    \n    return results;\n  }\n\n  // Real Pinecone search tool results\n  private executeTool = async (toolName: string, args: any): Promise<string> => {\n    if (toolName === 'search_knowledge_base') {\n      // Extract query string safely\n      let query = '';\n      if (typeof args.query === 'string') {\n        query = args.query;\n      } else if (args.query && typeof args.query === 'object') {\n        // If query is an object, try to get the value\n        query = args.query.toString() || '';\n      } else {\n        query = String(args.query || '');\n      }\n      \n      console.log(`Processing query: \"${query}\"`);\n      \n      // Use real Pinecone search if credentials are available\n      const pineconeApiKey = this.props.args[\"pinecone_api_key\"];\n      const pineconeIndexName = this.props.args[\"pinecone_index_name\"];\n      const openaiApiKey = this.props.args[\"openai_api_key\"];\n      \n      if (pineconeApiKey && pineconeIndexName && openaiApiKey) {\n        try {\n          // Generate embedding using OpenAI REST API\n          const embeddingResponse = await fetch('https://api.openai.com/v1/embeddings', {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${openaiApiKey}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              model: this.props.args[\"embedding_model\"] || \"text-embedding-ada-002\",\n              input: query\n            })\n          });\n          \n          if (!embeddingResponse.ok) {\n            throw new Error(`OpenAI API error: ${embeddingResponse.status}`);\n          }\n          \n          const embeddingData = await embeddingResponse.json();\n          const queryEmbedding = embeddingData.data[0].embedding;\n          \n          // Search Pinecone using REST API\n          const pineconeEnvironment = this.props.args[\"pinecone_environment\"];\n          const pineconeHost = this.props.args[\"pinecone_host\"] || \"https://api.pinecone.io\";\n          const indexUrl = `${pineconeHost}/indexes/${pineconeIndexName}/query`;\n          \n          const searchResponse = await fetch(indexUrl, {\n            method: 'POST',\n            headers: {\n              'Api-Key': pineconeApiKey,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              vector: queryEmbedding,\n              topK: this.props.args[\"search_top\"] || 3,\n              includeMetadata: true\n            })\n          });\n          \n          if (!searchResponse.ok) {\n            throw new Error(`Pinecone API error: ${searchResponse.status}`);\n          }\n          \n          const searchData = await searchResponse.json();\n          \n          if (searchData.matches && searchData.matches.length > 0) {\n            const results = searchData.matches\n              .map((match: any) => match.metadata?.text || match.metadata?.content || 'No content')\n              .filter((text: any) => text !== 'No content');\n            \n            if (results.length > 0) {\n              return `Found ${results.length} relevant results:\\n${results.join('\\n\\n')}`;\n            }\n          }\n          \n          // No results found\n          return \"\";\n        } catch (error) {\n          console.error(\"Pinecone search error:\", error);\n          return \"\";\n        }\n      }\n      \n      // No credentials available\n      return \"\";\n    }\n    \n    return \"\";\n  }\n\n  // Add follow-up call method for tool results\n  private makeFollowUpCall = async (apiUrl: string, userInput: string, toolResults: string[]): Promise<string> => {\n    const followUpPrompt = `Based on search results: ${toolResults.join('\\n')}\\n\\nComplete: \"${userInput}\"`;\n    \n    const {prompt_template, api_key, height, fontFamily, border, text: questionText, question_title, ...model_kwargs} = this.props.args;\n    const prompt = prompt_template\n      .replace(\"{text}\", questionText || \"\")\n      .replace(\"{question_title}\", question_title || \"\");\n    \n    const isChatApi = (\n      this.props.args[\"api_format\"] === \"chat\" ||\n      apiUrl.includes('/chat/completions')\n    );\n\n    let payload;\n    if (isChatApi) {\n      const validParams: any = {};\n      if (model_kwargs.model) validParams.model = model_kwargs.model;\n      if (model_kwargs.max_tokens) validParams.max_tokens = model_kwargs.max_tokens;\n      if (model_kwargs.temperature) validParams.temperature = model_kwargs.temperature;\n      if (model_kwargs.top_p) validParams.top_p = model_kwargs.top_p;\n      if (model_kwargs.stop) validParams.stop = model_kwargs.stop;\n\n      payload = {\n        messages: [\n          {\n            role: \"user\",\n            content: followUpPrompt\n          }\n        ],\n        ...validParams,\n        stream: false\n      };\n    } else {\n      payload = {\n        prompt: followUpPrompt,\n        ...model_kwargs,\n        echo: false\n      };\n    }\n    \n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json'\n    };\n    \n    if (api_key) {\n      headers['Authorization'] = `Bearer ${api_key}`;\n    }\n\n    try {\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(payload),\n        signal: this.abortController.signal\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const responseJson = await response.json();\n      \n      let fullResponse = \"\";\n      if (isChatApi && responseJson.choices && responseJson.choices[0] && responseJson.choices[0].message) {\n        fullResponse = responseJson.choices[0].message.content;\n      } else if (responseJson.choices && responseJson.choices[0] && responseJson.choices[0].text) {\n        fullResponse = responseJson.choices[0].text;\n      } else {\n        console.error(\"Unexpected response format:\", responseJson);\n        return \"\";\n      }\n      \n      // Extract answer from response\n      let extractedAnswer = \"\";\n      const answerTagIndex = fullResponse.indexOf(\"<answer>\");\n      if (answerTagIndex !== -1) {\n        extractedAnswer = fullResponse.substring(answerTagIndex + 8);\n        const endTagIndex = extractedAnswer.indexOf(\"</answer>\");\n        if (endTagIndex !== -1) {\n          extractedAnswer = extractedAnswer.substring(0, endTagIndex);\n        }\n      } else {\n        extractedAnswer = fullResponse;\n      }\n      \n      return extractedAnswer;\n    } catch (error) {\n      console.error(\"Follow-up call error:\", error);\n      return \"\";\n    }\n  }\n\nprivate callApi = async (text: string, api_upl: string): Promise<string> => {\n  // Abort the previous request\n  this.abortController.abort();\n  this.abortController = new AbortController();\n\n  if (text.trim() === \"\") {\n    return \"\";\n  }\n\n  const currentMinute = Math.floor(Date.now() / 60000);\n  if (currentMinute > this.state.currentMinute) {\n    this.setState({\n      currentMinute: currentMinute,\n      requestsThisMinute: 0\n    });\n  } else if (this.state.requestsThisMinute > this.props.args[\"rpm_limit\"]) {\n    // Retry after 1 second if limit is exceeded\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(this.callApi(text, api_upl));\n      }, 1000);\n    });\n  }\n\n  const {prompt_template, api_url, api_key, height, fontFamily, border, text: questionText, question_title, ...model_kwargs} = this.props.args;\n  const prompt = prompt_template\n    .replace(\"{text}\", questionText || \"\")\n    .replace(\"{question_title}\", question_title || \"\"); // format the prompt with both placeholders\n  \n  // Generalize to support both chat and legacy completions APIs, not just Groq\n  // Determine if the API expects chat format (messages) or legacy format (prompt)\n  // Use a prop or model_kwargs to allow user to specify the format, fallback to auto-detect\n  const isChatApi = (\n    this.props.args[\"api_format\"] === \"chat\" ||\n    api_upl.includes('/chat/completions')\n  );\n\n  // Define tools for the API call\n  const tools = [\n    {\n      type: \"function\",\n      function: {\n        name: \"search_knowledge_base\",\n        description: \"Search the Lysa knowledge base for customer support information\",\n        parameters: {\n          type: \"object\",\n          properties: {\n            query: {\n              type: \"string\",\n              description: \"Search query to find relevant information\"\n            }\n          },\n          required: [\"query\"]\n        }\n      }\n    }\n  ];\n\n  let payload;\n  if (isChatApi) {\n    // Use chat completions format for any compatible API\n    const validParams: any = {};\n    if (model_kwargs.model) validParams.model = model_kwargs.model;\n    if (model_kwargs.max_tokens) validParams.max_tokens = model_kwargs.max_tokens;\n    if (model_kwargs.temperature) validParams.temperature = model_kwargs.temperature;\n    if (model_kwargs.top_p) validParams.top_p = model_kwargs.top_p;\n    if (model_kwargs.stop) validParams.stop = model_kwargs.stop;\n\n    payload = {\n      messages: [\n        {\n          role: \"user\",\n          content: prompt\n        }\n      ],\n      ...validParams,\n      tools: tools,\n      tool_choice: \"auto\",\n      stream: false\n    };\n  } else {\n    // Use legacy completions format for other APIs\n    payload = {\n      prompt: prompt,\n      ...model_kwargs,\n      echo: false\n    };\n  }\n  \n  const headers: Record<string, string> = {\n    'Content-Type': 'application/json'\n  };\n  \n  // Add API key if provided\n  if (api_key) {\n    headers['Authorization'] = `Bearer ${api_key}`;\n  }\n\n  try {\n    // Increment total requests counter\n    this.setState(prevState => ({\n      totalRequests: prevState.totalRequests + 1\n    }));\n    \n    const response = await fetch(api_upl, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(payload),\n      signal: this.abortController.signal\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"API Error Response:\", errorText);\n      \n      // Increment failed requests counter\n      this.setState(prevState => ({\n        failedRequests: prevState.failedRequests + 1\n      }));\n      \n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    this.setState(prevState => ({\n      requestsThisMinute: prevState.requestsThisMinute + 1,\n      successfulRequests: prevState.successfulRequests + 1\n    }));\n\n    const responseJson = await response.json();\n    \n    // Calculate costs based on token usage\n    const inputTokens = responseJson.usage?.prompt_tokens || 0;\n    const outputTokens = responseJson.usage?.completion_tokens || 0;\n    \n    const inputPrice = this.props.args[\"token_cost\"] || 0.05;\n    const outputPrice = this.props.args[\"output_token_cost\"] || 0.10;\n    \n    // If no usage info, estimate based on text length (rough approximation)\n    const estimatedInputTokens = inputTokens || Math.ceil(prompt.length / 4);\n    const estimatedOutputTokens = outputTokens || 0;\n    \n    const newInputCost = (estimatedInputTokens / 1_000_000) * inputPrice;\n    const newOutputCost = (estimatedOutputTokens / 1_000_000) * outputPrice;\n    \n    this.setState(prevState => ({\n      inputCost: prevState.inputCost + newInputCost,\n      outputCost: prevState.outputCost + newOutputCost,\n      totalCost: prevState.totalCost + newInputCost + newOutputCost\n    }));\n    \n    // Handle both chat completions and legacy completions formats\n    let fullResponse = \"\";\n    let message = null;\n    \n    if (isChatApi && responseJson.choices && responseJson.choices[0] && responseJson.choices[0].message) {\n      message = responseJson.choices[0].message;\n      fullResponse = message.content || \"\";\n    } else if (responseJson.choices && responseJson.choices[0] && responseJson.choices[0].text) {\n      fullResponse = responseJson.choices[0].text;\n    } else {\n      console.error(\"Unexpected response format:\", responseJson);\n      return \"\";\n    }\n    \n    // Log the full response to console (this will show the thinking process)\n    console.log(\"Full AI Response:\", fullResponse);\n    \n    // Check if there are tool calls\n    if (isChatApi && message && message.tool_calls && message.tool_calls.length > 0) {\n      console.log(\"Tool calls detected:\", message.tool_calls);\n      \n      // Execute the tool calls\n      const toolResults = await this.executeToolCalls(message.tool_calls);\n      console.log(\"Tool execution results:\", toolResults);\n      \n      // Make a follow-up call with the tool results\n      const finalResponse = await this.makeFollowUpCall(api_upl, text, toolResults);\n      return finalResponse;\n    }\n    \n    // Extract only the content after <answer> tag\n    let extractedAnswer = \"\";\n    const answerTagIndex = fullResponse.indexOf(\"<answer>\");\n    if (answerTagIndex !== -1) {\n      extractedAnswer = fullResponse.substring(answerTagIndex + 8); // 8 is the length of \"<answer>\"\n      // Remove any trailing tags or extra content\n      const endTagIndex = extractedAnswer.indexOf(\"</answer>\");\n      if (endTagIndex !== -1) {\n        extractedAnswer = extractedAnswer.substring(0, endTagIndex);\n      }\n    } else {\n      // If no <answer> tag found, return the full response\n      extractedAnswer = fullResponse;\n    }\n    \n    // Log the extracted answer for debugging\n    console.log(\"Extracted Answer:\", extractedAnswer);\n    \n    return extractedAnswer;\n  } catch (error) {\n    if (error instanceof Error && error.name === 'AbortError') {\n      return \"\";  // Return empty string if request was aborted\n    }\n    console.error(\"Error decoding response\", error);\n    return \"\";\n  }\n}\n}\n\nexport default withStreamlitConnection(Copilot)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}