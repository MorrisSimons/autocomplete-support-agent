{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAssistant = void 0;\nconst assistant_control_1 = require(\"../../pinecone-generated-ts-fetch/assistant_control\");\nconst types_1 = require(\"./types\");\nconst validateObjectProperties_1 = require(\"../../utils/validateObjectProperties\");\nconst errors_1 = require(\"../../errors\");\nconst createAssistant = api => {\n  return async options => {\n    validateCreateAssistantOptions(options);\n    return await api.createAssistant({\n      createAssistantRequest: {\n        name: options.name,\n        instructions: options === null || options === void 0 ? void 0 : options.instructions,\n        metadata: options === null || options === void 0 ? void 0 : options.metadata,\n        region: options === null || options === void 0 ? void 0 : options.region\n      }\n    });\n  };\n};\nexports.createAssistant = createAssistant;\nconst validateCreateAssistantOptions = options => {\n  if (!options) {\n    throw new errors_1.PineconeArgumentError('You must pass an object with required properties (`name`) to create an Assistant.');\n  }\n  (0, validateObjectProperties_1.ValidateObjectProperties)(options, types_1.CreateAssistantOptionsType);\n  if (options.region) {\n    let region = assistant_control_1.CreateAssistantRequestRegionEnum.Us;\n    if (!Object.values(assistant_control_1.CreateAssistantRequestRegionEnum).toString().includes(options.region.toLowerCase())) {\n      throw new errors_1.PineconeArgumentError('Invalid region specified. Must be one of \"us\" or \"eu\"');\n    } else {\n      region = options.region.toLowerCase();\n    }\n    options.region = region;\n  }\n};","map":{"version":3,"mappings":";;;;;;AAAA;AAKA;AACA;AACA;AAEO,MAAMA,eAAe,GAAIC,GAA+B,IAAI;EACjE,OAAO,MAAOC,OAA+B,IAA6B;IACxEC,8BAA8B,CAACD,OAAO,CAAC;IACvC,OAAQ,MAAMD,GAAG,CAACD,eAAe,CAAC;MAChCI,sBAAsB,EAAE;QACtBC,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBC,YAAY,EAAEJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,YAAY;QACnCC,QAAQ,EAAEL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,QAAQ;QAC3BC,MAAM,EAAEN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM;;KAEpB,CAAC;EACJ,CAAC;AACH,CAAC;AAZYC,uBAAe;AAc5B,MAAMN,8BAA8B,GAAID,OAA+B,IAAI;EACzE,IAAI,CAACA,OAAO,EAAE;IACZ,MAAM,IAAIQ,8BAAqB,CAC7B,mFAAmF,CACpF;;EAGH,uDAAwB,EAACR,OAAO,EAAES,kCAA0B,CAAC;EAE7D,IAAIT,OAAO,CAACM,MAAM,EAAE;IAClB,IAAIA,MAAM,GACRI,oDAAgC,CAACC,EAAE;IACrC,IACE,CAACC,MAAM,CAACC,MAAM,CAACH,oDAAgC,CAAC,CAC7CI,QAAQ,EAAE,CACVC,QAAQ,CAACf,OAAO,CAACM,MAAM,CAACU,WAAW,EAAE,CAAC,EACzC;MACA,MAAM,IAAIR,8BAAqB,CAC7B,uDAAuD,CACxD;KACF,MAAM;MACLF,MAAM,GAAGN,OAAO,CAACM,MAAM,CAACU,WAAW,EAAsC;;IAE3EhB,OAAO,CAACM,MAAM,GAAGA,MAAM;;AAE3B,CAAC","names":["createAssistant","api","options","validateCreateAssistantOptions","createAssistantRequest","name","instructions","metadata","region","exports","errors_1","types_1","assistant_control_1","Us","Object","values","toString","includes","toLowerCase"],"sourceRoot":"","sources":["../../../src/assistant/control/createAssistant.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}