{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nvar _objectWithoutProperties = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nconst _excluded = [\"baseURL\", \"apiKey\", \"organization\", \"project\", \"webhookSecret\"],\n  _excluded2 = [\"signal\", \"method\"];\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenAI = void 0;\nconst tslib_1 = require(\"./internal/tslib.js\");\nconst uuid_1 = require(\"./internal/utils/uuid.js\");\nconst values_1 = require(\"./internal/utils/values.js\");\nconst sleep_1 = require(\"./internal/utils/sleep.js\");\nconst errors_1 = require(\"./internal/errors.js\");\nconst detect_platform_1 = require(\"./internal/detect-platform.js\");\nconst Shims = tslib_1.__importStar(require(\"./internal/shims.js\"));\nconst Opts = tslib_1.__importStar(require(\"./internal/request-options.js\"));\nconst qs = tslib_1.__importStar(require(\"./internal/qs/index.js\"));\nconst version_1 = require(\"./version.js\");\nconst Errors = tslib_1.__importStar(require(\"./core/error.js\"));\nconst Pagination = tslib_1.__importStar(require(\"./core/pagination.js\"));\nconst Uploads = tslib_1.__importStar(require(\"./core/uploads.js\"));\nconst API = tslib_1.__importStar(require(\"./resources/index.js\"));\nconst api_promise_1 = require(\"./core/api-promise.js\");\nconst batches_1 = require(\"./resources/batches.js\");\nconst completions_1 = require(\"./resources/completions.js\");\nconst embeddings_1 = require(\"./resources/embeddings.js\");\nconst files_1 = require(\"./resources/files.js\");\nconst images_1 = require(\"./resources/images.js\");\nconst models_1 = require(\"./resources/models.js\");\nconst moderations_1 = require(\"./resources/moderations.js\");\nconst webhooks_1 = require(\"./resources/webhooks.js\");\nconst audio_1 = require(\"./resources/audio/audio.js\");\nconst beta_1 = require(\"./resources/beta/beta.js\");\nconst chat_1 = require(\"./resources/chat/chat.js\");\nconst containers_1 = require(\"./resources/containers/containers.js\");\nconst conversations_1 = require(\"./resources/conversations/conversations.js\");\nconst evals_1 = require(\"./resources/evals/evals.js\");\nconst fine_tuning_1 = require(\"./resources/fine-tuning/fine-tuning.js\");\nconst graders_1 = require(\"./resources/graders/graders.js\");\nconst responses_1 = require(\"./resources/responses/responses.js\");\nconst uploads_1 = require(\"./resources/uploads/uploads.js\");\nconst vector_stores_1 = require(\"./resources/vector-stores/vector-stores.js\");\nconst detect_platform_2 = require(\"./internal/detect-platform.js\");\nconst headers_1 = require(\"./internal/headers.js\");\nconst env_1 = require(\"./internal/utils/env.js\");\nconst log_1 = require(\"./internal/utils/log.js\");\nconst values_2 = require(\"./internal/utils/values.js\");\n/**\n * API Client for interfacing with the OpenAI API.\n */\nclass OpenAI {\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n   * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor() {\n    var _ref2, _ref3, _ref4, _options$timeout, _options$logger, _ref5, _ref6, _options$maxRetries, _options$fetch;\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      {\n        baseURL = (0, env_1.readEnv)('OPENAI_BASE_URL'),\n        apiKey = (0, env_1.readEnv)('OPENAI_API_KEY'),\n        organization = (_ref2 = (0, env_1.readEnv)('OPENAI_ORG_ID')) !== null && _ref2 !== void 0 ? _ref2 : null,\n        project = (_ref3 = (0, env_1.readEnv)('OPENAI_PROJECT_ID')) !== null && _ref3 !== void 0 ? _ref3 : null,\n        webhookSecret = (_ref4 = (0, env_1.readEnv)('OPENAI_WEBHOOK_SECRET')) !== null && _ref4 !== void 0 ? _ref4 : null\n      } = _ref,\n      opts = _objectWithoutProperties(_ref, _excluded);\n    _OpenAI_instances.add(this);\n    _OpenAI_encoder.set(this, void 0);\n    this.completions = new API.Completions(this);\n    this.chat = new API.Chat(this);\n    this.embeddings = new API.Embeddings(this);\n    this.files = new API.Files(this);\n    this.images = new API.Images(this);\n    this.audio = new API.Audio(this);\n    this.moderations = new API.Moderations(this);\n    this.models = new API.Models(this);\n    this.fineTuning = new API.FineTuning(this);\n    this.graders = new API.Graders(this);\n    this.vectorStores = new API.VectorStores(this);\n    this.webhooks = new API.Webhooks(this);\n    this.beta = new API.Beta(this);\n    this.batches = new API.Batches(this);\n    this.uploads = new API.Uploads(this);\n    this.responses = new API.Responses(this);\n    this.conversations = new API.Conversations(this);\n    this.evals = new API.Evals(this);\n    this.containers = new API.Containers(this);\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n    }\n    const options = _objectSpread(_objectSpread({\n      apiKey,\n      organization,\n      project,\n      webhookSecret\n    }, opts), {}, {\n      baseURL: baseURL || \"https://api.openai.com/v1\"\n    });\n    if (!options.dangerouslyAllowBrowser && (0, detect_platform_2.isRunningInBrowser)()) {\n      throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n    }\n    this.baseURL = options.baseURL;\n    this.timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : _a.DEFAULT_TIMEOUT /* 10 minutes */;\n    this.logger = (_options$logger = options.logger) !== null && _options$logger !== void 0 ? _options$logger : console;\n    const defaultLogLevel = 'warn';\n    // Set default logLevel early so that we can log a warning in parseLogLevel.\n    this.logLevel = defaultLogLevel;\n    this.logLevel = (_ref5 = (_ref6 = (0, log_1.parseLogLevel)(options.logLevel, 'ClientOptions.logLevel', this)) !== null && _ref6 !== void 0 ? _ref6 : (0, log_1.parseLogLevel)((0, env_1.readEnv)('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this)) !== null && _ref5 !== void 0 ? _ref5 : defaultLogLevel;\n    this.fetchOptions = options.fetchOptions;\n    this.maxRetries = (_options$maxRetries = options.maxRetries) !== null && _options$maxRetries !== void 0 ? _options$maxRetries : 2;\n    this.fetch = (_options$fetch = options.fetch) !== null && _options$fetch !== void 0 ? _options$fetch : Shims.getDefaultFetch();\n    tslib_1.__classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n    this._options = options;\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n    this.webhookSecret = webhookSecret;\n  }\n  /**\n   * Create a new client instance re-using the same options given to the current client with optional overriding.\n   */\n  withOptions(options) {\n    const client = new this.constructor(_objectSpread(_objectSpread({}, this._options), {}, {\n      baseURL: this.baseURL,\n      maxRetries: this.maxRetries,\n      timeout: this.timeout,\n      logger: this.logger,\n      logLevel: this.logLevel,\n      fetch: this.fetch,\n      fetchOptions: this.fetchOptions,\n      apiKey: this.apiKey,\n      organization: this.organization,\n      project: this.project,\n      webhookSecret: this.webhookSecret\n    }, options));\n    return client;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  validateHeaders(_ref7) {\n    let {\n      values,\n      nulls\n    } = _ref7;\n    return;\n  }\n  async authHeaders(opts) {\n    return (0, headers_1.buildHeaders)([{\n      Authorization: \"Bearer \".concat(this.apiKey)\n    }]);\n  }\n  stringifyQuery(query) {\n    return qs.stringify(query, {\n      arrayFormat: 'brackets'\n    });\n  }\n  getUserAgent() {\n    return \"\".concat(this.constructor.name, \"/JS \").concat(version_1.VERSION);\n  }\n  defaultIdempotencyKey() {\n    return \"stainless-node-retry-\".concat((0, uuid_1.uuid4)());\n  }\n  makeStatusError(status, error, message, headers) {\n    return Errors.APIError.generate(status, error, message, headers);\n  }\n  buildURL(path, query, defaultBaseURL) {\n    const baseURL = !tslib_1.__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL || this.baseURL;\n    const url = (0, values_1.isAbsoluteURL)(path) ? new URL(path) : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!(0, values_2.isEmptyObj)(defaultQuery)) {\n      query = _objectSpread(_objectSpread({}, defaultQuery), query);\n    }\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  async prepareOptions(options) {}\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, _ref8) {\n    let {\n      url,\n      options\n    } = _ref8;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(opts => {\n      return _objectSpread({\n        method,\n        path\n      }, opts);\n    }));\n  }\n  request(options) {\n    let remainingRetries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return new api_promise_1.APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n  }\n  async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n    var _options$maxRetries2, _options$signal;\n    const options = await optionsInput;\n    const maxRetries = (_options$maxRetries2 = options.maxRetries) !== null && _options$maxRetries2 !== void 0 ? _options$maxRetries2 : this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n    await this.prepareOptions(options);\n    const {\n      req,\n      url,\n      timeout\n    } = await this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining\n    });\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    /** Not an API request ID, just for correlating local log entries. */\n    const requestLogID = 'log_' + (Math.random() * (1 << 24) | 0).toString(16).padStart(6, '0');\n    const retryLogStr = retryOfRequestLogID === undefined ? '' : \", retryOf: \".concat(retryOfRequestLogID);\n    const startTime = Date.now();\n    (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] sending request\"), (0, log_1.formatRequestDetails)({\n      retryOfRequestLogID,\n      method: options.method,\n      url,\n      options,\n      headers: req.headers\n    }));\n    if ((_options$signal = options.signal) === null || _options$signal === void 0 ? void 0 : _options$signal.aborted) {\n      throw new Errors.APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(errors_1.castToError);\n    const headersTime = Date.now();\n    if (response instanceof Error) {\n      var _options$signal2;\n      const retryMessage = \"retrying, \".concat(retriesRemaining, \" attempts remaining\");\n      if ((_options$signal2 = options.signal) === null || _options$signal2 === void 0 ? void 0 : _options$signal2.aborted) {\n        throw new Errors.APIUserAbortError();\n      }\n      // detect native connection timeout errors\n      // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n      // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n      // others do not provide enough information to distinguish timeouts from other connection errors\n      const isTimeout = (0, errors_1.isAbortError)(response) || /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n      if (retriesRemaining) {\n        (0, log_1.loggerFor)(this).info(\"[\".concat(requestLogID, \"] connection \").concat(isTimeout ? 'timed out' : 'failed', \" - \").concat(retryMessage));\n        (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] connection \").concat(isTimeout ? 'timed out' : 'failed', \" (\").concat(retryMessage, \")\"), (0, log_1.formatRequestDetails)({\n          retryOfRequestLogID,\n          url,\n          durationMs: headersTime - startTime,\n          message: response.message\n        }));\n        return this.retryRequest(options, retriesRemaining, retryOfRequestLogID !== null && retryOfRequestLogID !== void 0 ? retryOfRequestLogID : requestLogID);\n      }\n      (0, log_1.loggerFor)(this).info(\"[\".concat(requestLogID, \"] connection \").concat(isTimeout ? 'timed out' : 'failed', \" - error; no more retries left\"));\n      (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] connection \").concat(isTimeout ? 'timed out' : 'failed', \" (error; no more retries left)\"), (0, log_1.formatRequestDetails)({\n        retryOfRequestLogID,\n        url,\n        durationMs: headersTime - startTime,\n        message: response.message\n      }));\n      if (isTimeout) {\n        throw new Errors.APIConnectionTimeoutError();\n      }\n      throw new Errors.APIConnectionError({\n        cause: response\n      });\n    }\n    const specialHeaders = [...response.headers.entries()].filter(_ref9 => {\n      let [name] = _ref9;\n      return name === 'x-request-id';\n    }).map(_ref10 => {\n      let [name, value] = _ref10;\n      return ', ' + name + ': ' + JSON.stringify(value);\n    }).join('');\n    const responseInfo = \"[\".concat(requestLogID).concat(retryLogStr).concat(specialHeaders, \"] \").concat(req.method, \" \").concat(url, \" \").concat(response.ok ? 'succeeded' : 'failed', \" with status \").concat(response.status, \" in \").concat(headersTime - startTime, \"ms\");\n    if (!response.ok) {\n      const shouldRetry = await this.shouldRetry(response);\n      if (retriesRemaining && shouldRetry) {\n        const retryMessage = \"retrying, \".concat(retriesRemaining, \" attempts remaining\");\n        // We don't need the body of this response.\n        await Shims.CancelReadableStream(response.body);\n        (0, log_1.loggerFor)(this).info(\"\".concat(responseInfo, \" - \").concat(retryMessage));\n        (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] response error (\").concat(retryMessage, \")\"), (0, log_1.formatRequestDetails)({\n          retryOfRequestLogID,\n          url: response.url,\n          status: response.status,\n          headers: response.headers,\n          durationMs: headersTime - startTime\n        }));\n        return this.retryRequest(options, retriesRemaining, retryOfRequestLogID !== null && retryOfRequestLogID !== void 0 ? retryOfRequestLogID : requestLogID, response.headers);\n      }\n      const retryMessage = shouldRetry ? \"error; no more retries left\" : \"error; not retryable\";\n      (0, log_1.loggerFor)(this).info(\"\".concat(responseInfo, \" - \").concat(retryMessage));\n      const errText = await response.text().catch(err => (0, errors_1.castToError)(err).message);\n      const errJSON = (0, values_1.safeJSON)(errText);\n      const errMessage = errJSON ? undefined : errText;\n      (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] response error (\").concat(retryMessage, \")\"), (0, log_1.formatRequestDetails)({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        headers: response.headers,\n        message: errMessage,\n        durationMs: Date.now() - startTime\n      }));\n      const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n      throw err;\n    }\n    (0, log_1.loggerFor)(this).info(responseInfo);\n    (0, log_1.loggerFor)(this).debug(\"[\".concat(requestLogID, \"] response start\"), (0, log_1.formatRequestDetails)({\n      retryOfRequestLogID,\n      url: response.url,\n      status: response.status,\n      headers: response.headers,\n      durationMs: headersTime - startTime\n    }));\n    return {\n      response,\n      options,\n      controller,\n      requestLogID,\n      retryOfRequestLogID,\n      startTime\n    };\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, _objectSpread({\n      method: 'get',\n      path\n    }, opts));\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null, undefined);\n    return new Pagination.PagePromise(this, request, Page);\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const _ref11 = init || {},\n      {\n        signal,\n        method\n      } = _ref11,\n      options = _objectWithoutProperties(_ref11, _excluded2);\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    const isReadableBody = globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream || typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body;\n    const fetchOptions = _objectSpread(_objectSpread({\n      signal: controller.signal\n    }, isReadableBody ? {\n      duplex: 'half'\n    } : {}), {}, {\n      method: 'GET'\n    }, options);\n    if (method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = method.toUpperCase();\n    }\n    try {\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      return await this.fetch.call(undefined, url, fetchOptions);\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n  async shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n    let timeoutMillis;\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders.get('retry-after-ms');\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders.get('retry-after');\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      var _options$maxRetries3;\n      const maxRetries = (_options$maxRetries3 = options.maxRetries) !== null && _options$maxRetries3 !== void 0 ? _options$maxRetries3 : this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await (0, sleep_1.sleep)(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n    return sleepSeconds * jitter * 1000;\n  }\n  async buildRequest(inputOptions) {\n    var _options$timeout2, _this$fetchOptions, _options$fetchOptions;\n    let {\n      retryCount = 0\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const options = _objectSpread({}, inputOptions);\n    const {\n      method,\n      path,\n      query,\n      defaultBaseURL\n    } = options;\n    const url = this.buildURL(path, query, defaultBaseURL);\n    if ('timeout' in options) (0, values_1.validatePositiveInteger)('timeout', options.timeout);\n    options.timeout = (_options$timeout2 = options.timeout) !== null && _options$timeout2 !== void 0 ? _options$timeout2 : this.timeout;\n    const {\n      bodyHeaders,\n      body\n    } = this.buildBody({\n      options\n    });\n    const reqHeaders = await this.buildHeaders({\n      options: inputOptions,\n      method,\n      bodyHeaders,\n      retryCount\n    });\n    const req = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      method,\n      headers: reqHeaders\n    }, options.signal && {\n      signal: options.signal\n    }), globalThis.ReadableStream && body instanceof globalThis.ReadableStream && {\n      duplex: 'half'\n    }), body && {\n      body\n    }), (_this$fetchOptions = this.fetchOptions) !== null && _this$fetchOptions !== void 0 ? _this$fetchOptions : {}), (_options$fetchOptions = options.fetchOptions) !== null && _options$fetchOptions !== void 0 ? _options$fetchOptions : {});\n    return {\n      req,\n      url,\n      timeout: options.timeout\n    };\n  }\n  async buildHeaders(_ref12) {\n    let {\n      options,\n      method,\n      bodyHeaders,\n      retryCount\n    } = _ref12;\n    let idempotencyHeaders = {};\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const headers = (0, headers_1.buildHeaders)([idempotencyHeaders, _objectSpread(_objectSpread(_objectSpread({\n      Accept: 'application/json',\n      'User-Agent': this.getUserAgent(),\n      'X-Stainless-Retry-Count': String(retryCount)\n    }, options.timeout ? {\n      'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000))\n    } : {}), (0, detect_platform_1.getPlatformHeaders)()), {}, {\n      'OpenAI-Organization': this.organization,\n      'OpenAI-Project': this.project\n    }), await this.authHeaders(options), this._options.defaultHeaders, bodyHeaders, options.headers]);\n    this.validateHeaders(headers);\n    return headers.values;\n  }\n  buildBody(_ref13) {\n    let {\n      options: {\n        body,\n        headers: rawHeaders\n      }\n    } = _ref13;\n    if (!body) {\n      return {\n        bodyHeaders: undefined,\n        body: undefined\n      };\n    }\n    const headers = (0, headers_1.buildHeaders)([rawHeaders]);\n    if (\n    // Pass raw type verbatim\n    ArrayBuffer.isView(body) || body instanceof ArrayBuffer || body instanceof DataView || typeof body === 'string' &&\n    // Preserve legacy string encoding behavior for now\n    headers.values.has('content-type') ||\n    // `Blob` is superset of `File`\n    body instanceof Blob ||\n    // `FormData` -> `multipart/form-data`\n    body instanceof FormData ||\n    // `URLSearchParams` -> `application/x-www-form-urlencoded`\n    body instanceof URLSearchParams ||\n    // Send chunked stream (each chunk has own `length`)\n    globalThis.ReadableStream && body instanceof globalThis.ReadableStream) {\n      return {\n        bodyHeaders: undefined,\n        body: body\n      };\n    } else if (typeof body === 'object' && (Symbol.asyncIterator in body || Symbol.iterator in body && 'next' in body && typeof body.next === 'function')) {\n      return {\n        bodyHeaders: undefined,\n        body: Shims.ReadableStreamFrom(body)\n      };\n    } else {\n      return tslib_1.__classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, {\n        body,\n        headers\n      });\n    }\n  }\n}\nexports.OpenAI = OpenAI;\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n  return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = completions_1.Completions;\nOpenAI.Chat = chat_1.Chat;\nOpenAI.Embeddings = embeddings_1.Embeddings;\nOpenAI.Files = files_1.Files;\nOpenAI.Images = images_1.Images;\nOpenAI.Audio = audio_1.Audio;\nOpenAI.Moderations = moderations_1.Moderations;\nOpenAI.Models = models_1.Models;\nOpenAI.FineTuning = fine_tuning_1.FineTuning;\nOpenAI.Graders = graders_1.Graders;\nOpenAI.VectorStores = vector_stores_1.VectorStores;\nOpenAI.Webhooks = webhooks_1.Webhooks;\nOpenAI.Beta = beta_1.Beta;\nOpenAI.Batches = batches_1.Batches;\nOpenAI.Uploads = uploads_1.Uploads;\nOpenAI.Responses = responses_1.Responses;\nOpenAI.Conversations = conversations_1.Conversations;\nOpenAI.Evals = evals_1.Evals;\nOpenAI.Containers = containers_1.Containers;","map":{"version":3,"mappings":"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","names":["OpenAI","constructor","baseURL","apiKey","organization","project","webhookSecret","opts","_OpenAI_encoder","API","Completions","Chat","Embeddings","Files","Images","Audio","Moderations","Models","FineTuning","Graders","VectorStores","Webhooks","Beta","Batches","Uploads","Responses","Conversations","Evals","Containers","undefined","Errors","OpenAIError","options","dangerouslyAllowBrowser","timeout","_a","DEFAULT_TIMEOUT","logger","console","defaultLogLevel","logLevel","fetchOptions","maxRetries","fetch","Shims","getDefaultFetch","tslib_1","Opts","FallbackEncoder","_options","withOptions","client","defaultQuery","validateHeaders","values","nulls","authHeaders","Authorization","stringifyQuery","query","qs","stringify","arrayFormat","getUserAgent","name","version_1","defaultIdempotencyKey","makeStatusError","status","error","message","headers","APIError","generate","buildURL","path","defaultBaseURL","url","URL","endsWith","startsWith","slice","Array","isArray","search","toString","prepareOptions","prepareRequest","request","get","methodRequest","post","patch","put","delete","method","Promise","resolve","then","remainingRetries","api_promise_1","makeRequest","optionsInput","retriesRemaining","retryOfRequestLogID","req","buildRequest","retryCount","requestLogID","Math","random","padStart","retryLogStr","startTime","Date","now","debug","signal","aborted","APIUserAbortError","controller","AbortController","response","fetchWithTimeout","catch","errors_1","headersTime","Error","retryMessage","isTimeout","test","String","cause","info","durationMs","retryRequest","APIConnectionTimeoutError","APIConnectionError","specialHeaders","entries","filter","map","value","JSON","join","responseInfo","ok","shouldRetry","CancelReadableStream","body","errText","text","err","errJSON","errMessage","getAPIList","Page","requestAPIList","Pagination","PagePromise","init","ms","addEventListener","abort","setTimeout","isReadableBody","globalThis","ReadableStream","Symbol","asyncIterator","duplex","toUpperCase","call","clearTimeout","shouldRetryHeader","responseHeaders","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","parse","calculateDefaultRetryTimeoutMillis","initialRetryDelay","maxRetryDelay","numRetries","sleepSeconds","min","pow","jitter","inputOptions","bodyHeaders","buildBody","reqHeaders","buildHeaders","idempotencyHeaders","idempotencyHeader","idempotencyKey","Accept","trunc","defaultHeaders","rawHeaders","ArrayBuffer","isView","DataView","has","Blob","FormData","URLSearchParams","iterator","next","ReadableStreamFrom","exports","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","InvalidWebhookSignatureError","toFile","completions_1","chat_1","embeddings_1","files_1","images_1","audio_1","moderations_1","models_1","fine_tuning_1","graders_1","vector_stores_1","webhooks_1","beta_1","batches_1","uploads_1","responses_1","conversations_1","evals_1","containers_1"],"sourceRoot":"","sources":["src/client.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}