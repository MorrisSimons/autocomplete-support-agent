{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapHttpStatusError = exports.PineconeUnmappedHttpError = exports.PineconeNotImplementedError = exports.PineconeUnavailableError = exports.PineconeMaxRetriesExceededError = exports.PineconeInternalServerError = exports.PineconeConflictError = exports.PineconeNotFoundError = exports.PineconeAuthorizationError = exports.PineconeBadRequestError = void 0;\nconst base_1 = require(\"./base\");\nconst CONFIG_HELP = \"You can find the configuration values for your project in the Pinecone developer console at https://app.pinecone.io\";\n/** This error is thrown when API requests return with status 400. Typically this is due to some aspect of the request being incorrect or invalid.\n *\n * Some examples when this error could occur:\n * - While attempting to create an index with no available quota in your project.\n * - While upserting records that do not match the `dimension` of your index\n * - While attempting to create an index using an invalid name (\"!@#$%\")\n */\nclass PineconeBadRequestError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      message\n    } = failedRequest;\n    super(message);\n    this.name = 'PineconeBadRequestError';\n  }\n}\nexports.PineconeBadRequestError = PineconeBadRequestError;\n/**\n * This error occurs when API requests are attempted using invalid configurations such as a mispelled or revoked API key.\n *\n * Log in to https://app.pinecone.io to verify you have configured the { @link Pinecone }\n * client using the correct values.\n */\nclass PineconeAuthorizationError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url\n    } = failedRequest;\n    if (url) {\n      super(\"The API key you provided was rejected while calling \".concat(url, \". Please check your configuration values and try again. \").concat(CONFIG_HELP));\n    } else {\n      super(\"The API key you provided was rejected. Please check your configuration values and try again. \".concat(CONFIG_HELP));\n    }\n    this.name = 'PineconeAuthorizationError';\n  }\n}\nexports.PineconeAuthorizationError = PineconeAuthorizationError;\n/**\n * This error is thrown when interacting with a resource such as an index or collection\n * that cannot be found.\n */\nclass PineconeNotFoundError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url\n    } = failedRequest;\n    if (url) {\n      super(\"A call to \".concat(url, \" returned HTTP status 404.\"));\n    } else {\n      super('The requested resource could not be found.');\n    }\n    this.name = 'PineconeNotFoundError';\n  }\n}\nexports.PineconeNotFoundError = PineconeNotFoundError;\n/**\n * This error is thrown when attempting to create a resource such as an index or\n * collection with a name that is already in use.\n * */\nclass PineconeConflictError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url,\n      message\n    } = failedRequest;\n    if (url) {\n      super(\"A call to \".concat(url, \" returned HTTP status 409. \").concat(message ? message : ''));\n    } else {\n      super('The resource you are attempting to create already exists.');\n    }\n    this.name = 'PineconeConflictError';\n  }\n}\nexports.PineconeConflictError = PineconeConflictError;\n/**\n * This error indicates API responses are returning with status 500 and\n * something is wrong with Pinecone. Check the [status page](https://status.pinecone.io/)\n * for information about current or recent outages.\n *\n * @see [Pinecone's status page](https://status.pinecone.io/)\n */\nclass PineconeInternalServerError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url,\n      body,\n      status\n    } = failedRequest;\n    const intro = url ? \"An internal server error occurred while calling the \".concat(url, \" endpoint.\") : '';\n    const help = \"To see overall service health and learn whether this seems like a large-scale problem or one specific to your request, please go to https://status.pinecone.io/ to view our status page. If you believe the error reflects a problem with this client, please file a bug report in the github issue tracker at https://github.com/pinecone-io/pinecone-ts-client\";\n    const statusMessage = status ? \"Status Code: \".concat(status, \".\") : '';\n    const bodyMessage = body ? \"Body: \".concat(body) : '';\n    super([intro, statusMessage, help, bodyMessage].join(' ').trim());\n    this.name = 'PineconeInternalServerError';\n  }\n}\nexports.PineconeInternalServerError = PineconeInternalServerError;\n/* We can choose to throw this error when we want to limit requests to the server. When instantiated, pass the\n number of retries the user has made already. */\nclass PineconeMaxRetriesExceededError extends base_1.BasePineconeError {\n  constructor(retries) {\n    const intro = \"You have exceeded the max configured retries (\".concat(retries, \"). \");\n    const help = 'Increase the maxRetries field in the RetryOptions object to retry more times. If you believe the' + ' error reflects a problem with this client, please file a bug report in the github issue tracker at https://github.com/pinecone-io/pinecone-ts-client';\n    super([intro, help].join(' ').trim());\n    this.name = 'PineconeMaxRetriesExceededError';\n  }\n}\nexports.PineconeMaxRetriesExceededError = PineconeMaxRetriesExceededError;\n/**\n * This error indicates API responses are returning with status 503 and\n * Pinecone itself is down. Check the [status page](https://status.pinecone.io/)\n * for information about current or recent outages.\n *\n * The difference between this error (503) and a PineconeInternalServerError (500) is that this error does NOT indicate\n * that the server is _unable_ to process the request, just that the server will not process the request.\n *\n * @see [Pinecone's status page](https://status.pinecone.io/)\n */\nclass PineconeUnavailableError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url,\n      body,\n      status\n    } = failedRequest;\n    const intro = url ? \"The Pinecone service (\".concat(url, \") is temporarily unavailable.\") : '';\n    const statusMessage = status ? \"Status Code: \".concat(status, \".\") : '';\n    const help = \"To see overall service health and learn whether this seems like a large-scale problem or one specific to your request, please go to https://status.pinecone.io/ to view our status page. If you believe the error reflects a problem with this client, please file a bug report in the github issue tracker at https://github.com/pinecone-io/pinecone-ts-client\";\n    const bodyMessage = body ? \"Body: \".concat(body) : '';\n    super([intro, statusMessage, help, bodyMessage].join(' ').trim());\n    this.name = 'PineconeUnavailableError';\n  }\n}\nexports.PineconeUnavailableError = PineconeUnavailableError;\n/**\n * This error is thrown when you are attempting to use a feature that is\n * not implemented or unavailable to you on your current plan. Free indexes\n * only support a subset of Pinecone's capabilities, and if you are seeing\n * these exceptions then you should consult the\n * [pricing page](https://www.pinecone.io/pricing/) to see whether upgrading\n * makes sense for your use case.\n */\nclass PineconeNotImplementedError extends base_1.BasePineconeError {\n  constructor(requestInfo) {\n    const {\n      url,\n      message\n    } = requestInfo;\n    if (url) {\n      super(\"A call to \".concat(url, \" returned HTTP status 501. \").concat(message ? message : ''));\n    } else {\n      super();\n    }\n    this.name = 'PineconeNotImplementedError';\n  }\n}\nexports.PineconeNotImplementedError = PineconeNotImplementedError;\n/**\n * This catch-all exception is thrown when a request error that is not\n * specifically mapped to another exception is thrown.\n */\nclass PineconeUnmappedHttpError extends base_1.BasePineconeError {\n  constructor(failedRequest) {\n    const {\n      url,\n      status,\n      body,\n      message\n    } = failedRequest;\n    const intro = url ? \"An unexpected error occured while calling the \".concat(url, \" endpoint. \") : '';\n    const statusMsg = status ? \"Status: \".concat(status, \". \") : '';\n    const bodyMsg = body ? \"Body: \".concat(body) : '';\n    super([intro, message, statusMsg, bodyMsg].join(' ').trim());\n    this.name = 'PineconeUnmappedHttpError';\n  }\n}\nexports.PineconeUnmappedHttpError = PineconeUnmappedHttpError;\n/** @internal */\nconst mapHttpStatusError = failedRequestInfo => {\n  switch (failedRequestInfo.status) {\n    case 400:\n      return new PineconeBadRequestError(failedRequestInfo);\n    case 401:\n      return new PineconeAuthorizationError(failedRequestInfo);\n    case 403:\n      return new PineconeBadRequestError(failedRequestInfo);\n    case 404:\n      return new PineconeNotFoundError(failedRequestInfo);\n    case 409:\n      return new PineconeConflictError(failedRequestInfo);\n    case 500:\n      return new PineconeInternalServerError(failedRequestInfo);\n    case 501:\n      return new PineconeNotImplementedError(failedRequestInfo);\n    case 503:\n      return new PineconeUnavailableError(failedRequestInfo);\n    default:\n      throw new PineconeUnmappedHttpError(failedRequestInfo);\n  }\n};\nexports.mapHttpStatusError = mapHttpStatusError;","map":{"version":3,"mappings":"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","names":["CONFIG_HELP","PineconeBadRequestError","base_1","constructor","failedRequest","message","name","exports","PineconeAuthorizationError","url","PineconeNotFoundError","PineconeConflictError","PineconeInternalServerError","body","status","intro","help","statusMessage","bodyMessage","join","trim","PineconeMaxRetriesExceededError","retries","PineconeUnavailableError","PineconeNotImplementedError","requestInfo","PineconeUnmappedHttpError","statusMsg","bodyMsg","mapHttpStatusError","failedRequestInfo"],"sourceRoot":"","sources":["../../src/errors/http.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}