{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.path = exports.createPathTagFunction = void 0;\nexports.encodeURIPath = encodeURIPath;\nconst error_1 = require(\"../../core/error.js\");\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nfunction encodeURIPath(str) {\n  return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */Object.freeze( /* @__PURE__ */Object.create(null));\nconst createPathTagFunction = function () {\n  let pathEncoder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : encodeURIPath;\n  return function path(statics) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    // If there are no params, no processing is needed.\n    if (statics.length === 1) return statics[0];\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n      var _Object$getPrototypeO, _Object$getPrototypeO2, _value$hasOwnProperty;\n      if (/[?#]/.test(currentValue)) {\n        postPath = true;\n      }\n      const value = params[index];\n      let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n      if (index !== params.length && (value == null || typeof value === 'object' &&\n      // handle values from other realms\n      value.toString === ((_Object$getPrototypeO = Object.getPrototypeOf((_Object$getPrototypeO2 = Object.getPrototypeOf((_value$hasOwnProperty = value.hasOwnProperty) !== null && _value$hasOwnProperty !== void 0 ? _value$hasOwnProperty : EMPTY)) !== null && _Object$getPrototypeO2 !== void 0 ? _Object$getPrototypeO2 : EMPTY)) === null || _Object$getPrototypeO === void 0 ? void 0 : _Object$getPrototypeO.toString))) {\n        encoded = value + '';\n        invalidSegments.push({\n          start: previousValue.length + currentValue.length,\n          length: encoded.length,\n          error: \"Value of type \".concat(Object.prototype.toString.call(value).slice(8, -1), \" is not a valid path parameter\")\n        });\n      }\n      return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n      invalidSegments.push({\n        start: match.index,\n        length: match[0].length,\n        error: \"Value \\\"\".concat(match[0], \"\\\" can't be safely passed as a path parameter\")\n      });\n    }\n    invalidSegments.sort((a, b) => a.start - b.start);\n    if (invalidSegments.length > 0) {\n      let lastEnd = 0;\n      const underline = invalidSegments.reduce((acc, segment) => {\n        const spaces = ' '.repeat(segment.start - lastEnd);\n        const arrows = '^'.repeat(segment.length);\n        lastEnd = segment.start + segment.length;\n        return acc + spaces + arrows;\n      }, '');\n      throw new error_1.OpenAIError(\"Path parameters result in path with invalid segments:\\n\".concat(invalidSegments.map(e => e.error).join('\\n'), \"\\n\").concat(path, \"\\n\").concat(underline));\n    }\n    return path;\n  };\n};\nexports.createPathTagFunction = createPathTagFunction;\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexports.path = (0, exports.createPathTagFunction)(encodeURIPath);","map":{"version":3,"mappings":"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","names":["exports","encodeURIPath","str","replace","encodeURIComponent","EMPTY","Object","freeze","create","createPathTagFunction","pathEncoder","path","statics","params","length","postPath","invalidSegments","reduce","previousValue","currentValue","index","test","value","encoded","toString","getPrototypeOf","hasOwnProperty","push","start","error","prototype","call","slice","pathOnly","split","invalidSegmentPattern","match","exec","sort","a","b","lastEnd","underline","acc","segment","spaces","repeat","arrows","error_1","map","e","join"],"sourceRoot":"","sources":["../../src/internal/utils/path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}