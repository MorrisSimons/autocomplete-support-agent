{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _taggedTemplateLiteral = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VectorStores = void 0;\nconst tslib_1 = require(\"../../internal/tslib.js\");\nconst resource_1 = require(\"../../core/resource.js\");\nconst FileBatchesAPI = tslib_1.__importStar(require(\"./file-batches.js\"));\nconst file_batches_1 = require(\"./file-batches.js\");\nconst FilesAPI = tslib_1.__importStar(require(\"./files.js\"));\nconst files_1 = require(\"./files.js\");\nconst pagination_1 = require(\"../../core/pagination.js\");\nconst headers_1 = require(\"../../internal/headers.js\");\nconst path_1 = require(\"../../internal/utils/path.js\");\nclass VectorStores extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.files = new FilesAPI.Files(this._client);\n    this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n  }\n  /**\n   * Create a vector store.\n   */\n  create(body, options) {\n    return this._client.post('/vector_stores', _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Retrieves a vector store.\n   */\n  retrieve(vectorStoreID, options) {\n    return this._client.get((0, path_1.path)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"/vector_stores/\", \"\"])), vectorStoreID), _objectSpread(_objectSpread({}, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Modifies a vector store.\n   */\n  update(vectorStoreID, body, options) {\n    return this._client.post((0, path_1.path)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"/vector_stores/\", \"\"])), vectorStoreID), _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Returns a list of vector stores.\n   */\n  list() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    return this._client.getAPIList('/vector_stores', pagination_1.CursorPage, _objectSpread(_objectSpread({\n      query\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Delete a vector store.\n   */\n  delete(vectorStoreID, options) {\n    return this._client.delete((0, path_1.path)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"/vector_stores/\", \"\"])), vectorStoreID), _objectSpread(_objectSpread({}, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Search a vector store for relevant chunks based on a query and file attributes\n   * filter.\n   */\n  search(vectorStoreID, body, options) {\n    return this._client.getAPIList((0, path_1.path)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"/vector_stores/\", \"/search\"])), vectorStoreID), pagination_1.Page, _objectSpread(_objectSpread({\n      body,\n      method: 'post'\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n}\nexports.VectorStores = VectorStores;\nVectorStores.Files = files_1.Files;\nVectorStores.FileBatches = file_batches_1.FileBatches;","map":{"version":3,"mappings":";;AAAA;AAAA;AAAA;AAAA;;;;;;AAEA;AAEA;AACA;AAQA;AACA;AAeA;AACA;AAEA;AAEA,MAAaA,YAAa,SAAQC,sBAAW;EAA7CC;;IACE,UAAK,GAAmB,IAAIC,QAAQ,CAACC,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC;IACxD,gBAAW,GAA+B,IAAIC,cAAc,CAACC,WAAW,CAAC,IAAI,CAACF,OAAO,CAAC;EAkFxF;EAhFE;;;EAGAG,MAAM,CAACC,IAA6B,EAAEC,OAAwB;IAC5D,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAAC,gBAAgB;MACvCF;IAAI,GACDC,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAC7E;EACJ;EAEA;;;EAGAC,QAAQ,CAACC,aAAqB,EAAEJ,OAAwB;IACtD,OAAO,IAAI,CAACL,OAAO,CAACU,GAAG,EAAC,cAAI,0FAAkBD,aAAa,mCACtDJ,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAC7E;EACJ;EAEA;;;EAGAI,MAAM,CACJF,aAAqB,EACrBL,IAA6B,EAC7BC,OAAwB;IAExB,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,EAAC,cAAI,4FAAkBG,aAAa;MAC1DL;IAAI,GACDC,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAC7E;EACJ;EAEA;;;EAGAK,IAAI,GAEsB;IAAA,IADxBC,4EAAkD,EAAE;IAAA,IACpDR,OAAwB;IAExB,OAAO,IAAI,CAACL,OAAO,CAACc,UAAU,CAAC,gBAAgB,EAAEC,uBAAuB;MACtEF;IAAK,GACFR,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAC7E;EACJ;EAEA;;;EAGAS,MAAM,CAACP,aAAqB,EAAEJ,OAAwB;IACpD,OAAO,IAAI,CAACL,OAAO,CAACgB,MAAM,EAAC,cAAI,4FAAkBP,aAAa,mCACzDJ,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAC7E;EACJ;EAEA;;;;EAIAU,MAAM,CACJR,aAAqB,EACrBL,IAA6B,EAC7BC,OAAwB;IAExB,OAAO,IAAI,CAACL,OAAO,CAACc,UAAU,EAC5B,cAAI,mGAAkBL,aAAa,GACnCM,iBAA+B;MAE7BX,IAAI;MACJc,MAAM,EAAE;IAAM,GACXb,OAAO;MACVE,OAAO,EAAE,0BAAY,EAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,CAAC;IAAC,GAEhF;EACH;;AAnFFY;AA2dAxB,YAAY,CAACI,KAAK,GAAGqB,aAAK;AAC1BzB,YAAY,CAACO,WAAW,GAAGmB,0BAAW","names":["VectorStores","resource_1","constructor","FilesAPI","Files","_client","FileBatchesAPI","FileBatches","create","body","options","post","headers","retrieve","vectorStoreID","get","update","list","query","getAPIList","pagination_1","delete","search","method","exports","files_1","file_batches_1"],"sourceRoot":"","sources":["../../src/resources/vector-stores/vector-stores.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}