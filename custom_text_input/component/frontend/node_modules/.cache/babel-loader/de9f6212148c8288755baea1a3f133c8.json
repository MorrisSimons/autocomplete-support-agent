{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertKeysToCamelCase = void 0;\n// converts keys of a json payload from snake_case to camelCase\nconst convertKeysToCamelCase = object => {\n  if (Array.isArray(object)) {\n    return object.map(item => (0, exports.convertKeysToCamelCase)(item));\n  } else if (object !== null && typeof object === 'object') {\n    return Object.entries(object).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      const camelKey = toCamelCase(key);\n      acc[camelKey] = (0, exports.convertKeysToCamelCase)(value);\n      return acc;\n    }, {});\n  }\n  return object; // return primitives as is\n};\n\nexports.convertKeysToCamelCase = convertKeysToCamelCase;\n// converts snake-case keys to camelCase\nconst toCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());","map":{"version":3,"mappings":";;;;;;AAAA;AACO,MAAMA,sBAAsB,GAAIC,MAAW,IAAI;EACpD,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACzB,OAAOA,MAAM,CAACG,GAAG,CAAEC,IAAI,IAAK,kCAAsB,EAACA,IAAI,CAAC,CAAC;GAC1D,MAAM,IAAIJ,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACxD,OAAOK,MAAM,CAACC,OAAO,CAACN,MAAM,CAAC,CAACO,MAAM,CAAC,CAACC,GAAG,WAAkB;MAAA,IAAhB,CAACC,GAAG,EAAEC,KAAK,CAAC;MACrD,MAAMC,QAAQ,GAAGC,WAAW,CAACH,GAAG,CAAC;MACjCD,GAAG,CAACG,QAAQ,CAAC,GAAG,kCAAsB,EAACD,KAAK,CAAC;MAC7C,OAAOF,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC;;EAER,OAAOR,MAAM,CAAC,CAAC;AACjB,CAAC;;AAXYa,8BAAsB;AAanC;AACA,MAAMD,WAAW,GAAIE,GAAW,IAC9BA,GAAG,CAACC,OAAO,CAAC,WAAW,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAKA,MAAM,CAACC,WAAW,EAAE,CAAC","names":["convertKeysToCamelCase","object","Array","isArray","map","item","Object","entries","reduce","acc","key","value","camelKey","toCamelCase","exports","str","replace","_","letter","toUpperCase"],"sourceRoot":"","sources":["../../src/utils/convertKeys.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}