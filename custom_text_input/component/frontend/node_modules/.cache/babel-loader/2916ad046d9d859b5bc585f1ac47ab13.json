{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _taggedTemplateLiteral = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nvar _templateObject, _templateObject2, _templateObject3;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Threads = void 0;\nconst tslib_1 = require(\"../../../internal/tslib.js\");\nconst resource_1 = require(\"../../../core/resource.js\");\nconst MessagesAPI = tslib_1.__importStar(require(\"./messages.js\"));\nconst messages_1 = require(\"./messages.js\");\nconst RunsAPI = tslib_1.__importStar(require(\"./runs/runs.js\"));\nconst runs_1 = require(\"./runs/runs.js\");\nconst headers_1 = require(\"../../../internal/headers.js\");\nconst AssistantStream_1 = require(\"../../../lib/AssistantStream.js\");\nconst path_1 = require(\"../../../internal/utils/path.js\");\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nclass Threads extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n    this.messages = new MessagesAPI.Messages(this._client);\n  }\n  /**\n   * Create a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  create() {\n    let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    return this._client.post('/threads', _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Retrieves a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  retrieve(threadID, options) {\n    return this._client.get((0, path_1.path)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"/threads/\", \"\"])), threadID), _objectSpread(_objectSpread({}, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Modifies a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  update(threadID, body, options) {\n    return this._client.post((0, path_1.path)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"/threads/\", \"\"])), threadID), _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  /**\n   * Delete a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  delete(threadID, options) {\n    return this._client.delete((0, path_1.path)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"/threads/\", \"\"])), threadID), _objectSpread(_objectSpread({}, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers])\n    }));\n  }\n  createAndRun(body, options) {\n    var _body$stream;\n    return this._client.post('/threads/runs', _objectSpread(_objectSpread({\n      body\n    }, options), {}, {\n      headers: (0, headers_1.buildHeaders)([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options === null || options === void 0 ? void 0 : options.headers]),\n      stream: (_body$stream = body.stream) !== null && _body$stream !== void 0 ? _body$stream : false\n    }));\n  }\n  /**\n   * A helper to create a thread, start a run and then poll for a terminal state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndRunPoll(body, options) {\n    const run = await this.createAndRun(body, options);\n    return await this.runs.poll(run.id, {\n      thread_id: run.thread_id\n    }, options);\n  }\n  /**\n   * Create a thread and stream the run back\n   */\n  createAndRunStream(body, options) {\n    return AssistantStream_1.AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n  }\n}\nexports.Threads = Threads;\nThreads.Runs = runs_1.Runs;\nThreads.Messages = messages_1.Messages;","map":{"version":3,"mappings":"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","names":["Threads","resource_1","constructor","RunsAPI","Runs","_client","MessagesAPI","Messages","create","body","options","post","headers","retrieve","threadID","get","update","delete","createAndRun","stream","createAndRunPoll","run","runs","poll","id","thread_id","createAndRunStream","AssistantStream_1","createThreadAssistantStream","beta","threads","exports","runs_1","messages_1"],"sourceRoot":"","sources":["../../../src/resources/beta/threads/threads.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}