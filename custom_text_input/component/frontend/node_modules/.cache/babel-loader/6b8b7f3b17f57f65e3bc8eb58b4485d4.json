{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/morrissimons/Desktop/lysa-support-agent/custom_text_input/component/frontend/node_modules/@babel/runtime/helpers/objectSpread2\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createForm = exports.multipartFormRequestOptions = exports.maybeMultipartFormRequestOptions = exports.isAsyncIterable = exports.checkFileSupport = void 0;\nexports.makeFile = makeFile;\nexports.getName = getName;\nconst shims_1 = require(\"./shims.js\");\nconst checkFileSupport = () => {\n  if (typeof File === 'undefined') {\n    var _process$versions;\n    const {\n      process\n    } = globalThis;\n    const isOldNode = typeof (process === null || process === void 0 ? void 0 : (_process$versions = process.versions) === null || _process$versions === void 0 ? void 0 : _process$versions.node) === 'string' && parseInt(process.versions.node.split('.')) < 20;\n    throw new Error('`File` is not defined as a global, which is required for file uploads.' + (isOldNode ? \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\" : ''));\n  }\n};\nexports.checkFileSupport = checkFileSupport;\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nfunction makeFile(fileBits, fileName, options) {\n  (0, exports.checkFileSupport)();\n  return new File(fileBits, fileName !== null && fileName !== void 0 ? fileName : 'unknown_file', options);\n}\nfunction getName(value) {\n  return (typeof value === 'object' && value !== null && ('name' in value && value.name && String(value.name) || 'url' in value && value.url && String(value.url) || 'filename' in value && value.filename && String(value.filename) || 'path' in value && value.path && String(value.path)) || '').split(/[\\\\/]/).pop() || undefined;\n}\nconst isAsyncIterable = value => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexports.isAsyncIterable = isAsyncIterable;\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nconst maybeMultipartFormRequestOptions = async (opts, fetch) => {\n  if (!hasUploadableValue(opts.body)) return opts;\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    body: await (0, exports.createForm)(opts.body, fetch)\n  });\n};\nexports.maybeMultipartFormRequestOptions = maybeMultipartFormRequestOptions;\nconst multipartFormRequestOptions = async (opts, fetch) => {\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    body: await (0, exports.createForm)(opts.body, fetch)\n  });\n};\nexports.multipartFormRequestOptions = multipartFormRequestOptions;\nconst supportsFormDataMap = /* @__PURE__ */new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n  const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n  const cached = supportsFormDataMap.get(fetch);\n  if (cached) return cached;\n  const promise = (async () => {\n    try {\n      const FetchResponse = 'Response' in fetch ? fetch.Response : (await fetch('data:,')).constructor;\n      const data = new FormData();\n      if (data.toString() === (await new FetchResponse(data).text())) {\n        return false;\n      }\n      return true;\n    } catch (_unused) {\n      // avoid false negatives\n      return true;\n    }\n  })();\n  supportsFormDataMap.set(fetch, promise);\n  return promise;\n}\nconst createForm = async (body, fetch) => {\n  if (!(await supportsFormData(fetch))) {\n    throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n  }\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(_ref => {\n    let [key, value] = _ref;\n    return addFormValue(form, key, value);\n  }));\n  return form;\n};\nexports.createForm = createForm;\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = value => value instanceof Blob && 'name' in value;\nconst isUploadable = value => typeof value === 'object' && value !== null && (value instanceof Response || (0, exports.isAsyncIterable)(value) || isNamedBlob(value));\nconst hasUploadableValue = value => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue(value[k])) return true;\n    }\n  }\n  return false;\n};\nconst addFormValue = async (form, key, value) => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\"Received null for \\\"\".concat(key, \"\\\"; to pass null in FormData, you must use the string 'null'\"));\n  }\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (value instanceof Response) {\n    form.append(key, makeFile([await value.blob()], getName(value)));\n  } else if ((0, exports.isAsyncIterable)(value)) {\n    form.append(key, makeFile([await new Response((0, shims_1.ReadableStreamFrom)(value)).blob()], getName(value)));\n  } else if (isNamedBlob(value)) {\n    form.append(key, value, getName(value));\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map(entry => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(Object.entries(value).map(_ref2 => {\n      let [name, prop] = _ref2;\n      return addFormValue(form, \"\".concat(key, \"[\").concat(name, \"]\"), prop);\n    }));\n  } else {\n    throw new TypeError(\"Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got \".concat(value, \" instead\"));\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","checkFileSupport","File","process","globalThis","isOldNode","versions","node","parseInt","split","Error","makeFile","fileBits","fileName","options","getName","value","name","String","url","filename","path","pop","undefined","isAsyncIterable","Symbol","asyncIterator","maybeMultipartFormRequestOptions","opts","fetch","hasUploadableValue","body","multipartFormRequestOptions","supportsFormDataMap","WeakMap","supportsFormData","fetchObject","cached","get","promise","FetchResponse","Response","constructor","data","FormData","toString","text","set","createForm","TypeError","form","Promise","all","Object","entries","map","key","addFormValue","isNamedBlob","Blob","isUploadable","Array","isArray","some","k","append","blob","entry","prop"],"sourceRoot":"","sources":["../src/internal/uploads.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}