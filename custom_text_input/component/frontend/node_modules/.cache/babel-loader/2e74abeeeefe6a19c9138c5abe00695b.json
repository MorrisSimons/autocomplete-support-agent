{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PineconeRequestError = exports.PineconeConnectionError = void 0;\nconst base_1 = require(\"./base\");\n/**\n * This error is thrown when the client attempts to make a\n * request and never receives any response.\n *\n * This could be due to:\n * - Network problems which prevent the request from being completed.\n * - An outage of Pinecone's APIs. See [Pinecone's status page](https://status.pinecone.io/) to find out whether there is an ongoing incident.\n *\n * The `cause` property will contain a reference to the underlying error. Inspect its value to find out more about the root cause of the error.\n * ```\n * import { Pinecone } from '@pinecone-database/pinecone';\n *\n * const p = new Pinecone({ apiKey: 'invalid-api-key-value' })\n *\n * try {\n *  await p.listIndexes();\n * } catch (e) {\n *  console.log(e.name); // PineconeConnectionError\n *  console.log(e.cause); // Error [FetchError]: The request failed and the interceptors did not return an alternative response\n *  console.log(e.cause.cause); // TypeError: fetch failed\n *  console.log(e.cause.cause.cause); // Error: getaddrinfo ENOTFOUND controller.wrong-environment.pinecone.io\n * }\n * ```\n *\n * @see [Pinecone's status page](https://status.pinecone.io/)\n * */\nclass PineconeConnectionError extends base_1.BasePineconeError {\n  constructor(e, url) {\n    let urlMessage = '';\n    if (url) {\n      urlMessage = \" while calling \".concat(url);\n    }\n    super(\"Request failed to reach Pinecone\".concat(urlMessage, \". This can occur for reasons such as network problems that prevent the request from being completed, or a Pinecone API outage. Check your network connection, and visit https://status.pinecone.io/ to see whether any outages are ongoing.\"), e);\n    this.name = 'PineconeConnectionError';\n  }\n}\nexports.PineconeConnectionError = PineconeConnectionError;\n/**\n * This error is thrown any time a request to the Pinecone API fails.\n *\n * The `cause` property will contain a reference to the underlying error. Inspect its value to find out more about the root cause.\n */\nclass PineconeRequestError extends base_1.BasePineconeError {\n  constructor(context) {\n    if (context.response) {\n      super(\"Request failed during a call to \".concat(context.init.method, \" \").concat(context.url, \" with status \").concat(context.response.status), context.error);\n    } else {\n      super(\"Request failed during a call to \".concat(context.init.method, \" \").concat(context.url), context.error);\n    }\n  }\n}\nexports.PineconeRequestError = PineconeRequestError;","map":{"version":3,"mappings":";;;;;;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAaA,uBAAwB,SAAQC,wBAAiB;EAC5DC,YAAYC,CAAQ,EAAEC,GAAY;IAChC,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAID,GAAG,EAAE;MACPC,UAAU,4BAAqBD,GAAG,CAAE;;IAGtC,KAAK,2CACgCC,UAAU,kPAC7CF,CAAC,CACF;IACD,IAAI,CAACG,IAAI,GAAG,yBAAyB;EACvC;;AAZFC;AAeA;;;;;AAKA,MAAaC,oBAAqB,SAAQP,wBAAiB;EACzDC,YAAYO,OAAqB;IAC/B,IAAIA,OAAO,CAACC,QAAQ,EAAE;MACpB,KAAK,2CACgCD,OAAO,CAACE,IAAI,CAACC,MAAM,cAAIH,OAAO,CAACL,GAAG,0BAAgBK,OAAO,CAACC,QAAQ,CAACG,MAAM,GAC5GJ,OAAO,CAACK,KAAc,CACvB;KACF,MAAM;MACL,KAAK,2CACgCL,OAAO,CAACE,IAAI,CAACC,MAAM,cAAIH,OAAO,CAACL,GAAG,GACrEK,OAAO,CAACK,KAAc,CACvB;;EAEL;;AAbFP","names":["PineconeConnectionError","base_1","constructor","e","url","urlMessage","name","exports","PineconeRequestError","context","response","init","method","status","error"],"sourceRoot":"","sources":["../../src/errors/request.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}